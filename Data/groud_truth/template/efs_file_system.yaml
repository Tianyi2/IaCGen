---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'cfn-modules: AWS EFS file system'
# cfn-modules:implements(ExposeId)
Parameters:
  PerformanceMode:
    Description: 'The performance mode of the file system.'
    Type: String
    Default: generalPurpose
    AllowedValues: [generalPurpose, maxIO]
  NumberOfAvailabilityZones: # CloudFormation can not use conditions based on imported values (we have to repeat this information as a parameter, e.g. !GetAtt 'Vpc.Outputs.NumberOfAvailabilityZones')
    Description: 'How many availability zones should be used? Same as in the vpc module!'
    Type: Number
    Default: 3
    MinValue: 2
    MaxValue: 3
  BackupRetentionPeriod:
    Description: 'The number of days to keep backups of the EFS file system (set to 0 to disable).'
    Type: Number
    MinValue: 0
    MaxValue: 35
    Default: 30
  BackupScheduleExpression:
    Description: 'A CRON expression specifying when AWS Backup initiates a backup job.'
    Type: String
    Default: 'cron(0 5 ? * * *)'
Conditions:
  HasAvailabilityZoneC: !Equals [!Ref NumberOfAvailabilityZones, 3]

  HasBackupRetentionPeriod: !Not [!Equals [!Ref BackupRetentionPeriod, 0]]
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-vpc

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-subnet

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        FromPort: 2049
        ToPort: 2049
        IpProtocol: tcp
  FileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      PerformanceMode: !Ref PerformanceMode
  AlarmPercentIOLimitTooHigh:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average IO utilization over last 10 minutes higher than 80%'
      Namespace: 'AWS/EFS'
      MetricName: PercentIOLimit
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      Dimensions:
      - Name: FileSystemId
        Value: !Ref FileSystem
  AlarmBurstCreditBalanceTooLow:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'EFS file system is running out of burst credits. You can expect a significant performance drop in the next hour.'
      Namespace: 'AWS/EFS'
      MetricName: BurstCreditBalance
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: LessThanThreshold
      Threshold: 192416666667 # 192 GB in Bytes (last hour where you can burst at 100 MB/sec)
      Dimensions:
      - Name: FileSystemId
        Value: !Ref FileSystem
  AlarmThroughputTooHigh: # https://docs.aws.amazon.com/efs/latest/ug/monitoring-metric-math.html#metric-math-throughput-utilization
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Reached 80% of the permitted throughput 6 times over last 10 minutes.'
      Metrics:
      - Id: m1
        Label: MeteredIOBytes
        MetricStat:
          Metric:
            Namespace: 'AWS/EFS'
            MetricName: MeteredIOBytes
            Dimensions:
            - Name: FileSystemId
              Value: !Ref FileSystem
          Period: 60
          Stat: Sum
          Unit: Bytes
        ReturnData: false
      - Id: m2
        Label: PermittedThroughput
        MetricStat:
          Metric:
            Namespace: 'AWS/EFS'
            MetricName: PermittedThroughput
            Dimensions:
            - Name: FileSystemId
              Value: !Ref FileSystem
          Period: 60
          Stat: Sum
          Unit: 'Bytes/Second'
        ReturnData: false
      - Expression: '(m1/1048576)/PERIOD(m1)'
        Id: e1
        Label: e1
        ReturnData: false
      - Expression: 'm2/1048576'
        Id: e2
        Label: e2
        ReturnData: false
      - Expression: '((e1)*100)/(e2)'
        Id: e3
        Label: 'Throughput utilization (%)'
        ReturnData: true
      EvaluationPeriods: 10
      DatapointsToAlarm: 6
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
  MountTargetA:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref FileSystem
      SecurityGroups:
      - !Ref SecurityGroup
      SubnetId: !Ref PublicSubnet
  BackupVault: # cannot be deleted with data
    Condition: HasBackupRetentionPeriod
    Type: 'AWS::Backup::BackupVault'
    Properties:
      BackupVaultName: !Ref 'AWS::StackName'
  BackupPlan:
    Condition: HasBackupRetentionPeriod
    Type: 'AWS::Backup::BackupPlan'
    Properties:
      BackupPlan:
        BackupPlanName: !Ref 'AWS::StackName'
        BackupPlanRule:
        - CompletionWindowMinutes: 1440
          Lifecycle:
            DeleteAfterDays: !Ref BackupRetentionPeriod
          RuleName: !Ref 'AWS::StackName'
          ScheduleExpression: !Ref BackupScheduleExpression
          StartWindowMinutes: 60
          TargetBackupVault: !Ref BackupVault
  BackupRole:
    Condition: HasBackupRetentionPeriod
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'backup.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: backup # https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'elasticfilesystem:Backup'
            - 'elasticfilesystem:DescribeTags'
            Resource: !Sub 'arn:${AWS::Partition}:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:file-system/${FileSystem}'
  BackupSelection:
    Condition: HasBackupRetentionPeriod
    Type: 'AWS::Backup::BackupSelection'
    Properties:
      BackupPlanId: !Ref BackupPlan
      BackupSelection:
        IamRoleArn: !GetAtt 'BackupRole.Arn'
        Resources:
        - !Sub 'arn:${AWS::Partition}:elasticfilesystem:${AWS::Region}:${AWS::AccountId}:file-system/${FileSystem}'
        SelectionName: !Ref 'AWS::StackName'
Outputs:
  ModuleId:
    Value: 'efs-file-system'
  ModuleVersion:
    Value: '1.3.0'
  StackName:
    Value: !Ref 'AWS::StackName'
  Id:
    Description: 'The id of the file system.'
    Value: !Ref FileSystem
    Export:
      Name: !Sub '${AWS::StackName}-Id'
