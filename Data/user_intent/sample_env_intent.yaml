metadata:
  id: "CKV2_CUSTOM_5"
  name: "EC2 Scheduling Environment Validation"
  category: "GENERAL_SECURITY"
  severity: "HIGH"
  guideline: "Ensure scheduling lab environment meets infrastructure and security requirements"

definition:
  and:
    # Network Configuration Validation
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::VPC"]
      attribute: "Properties.CidrBlock"
      operator: "equals"
      value: "172.31.0.0/16"

    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Subnet"]
      attribute: "Properties.MapPublicIpOnLaunch"
      operator: "equals"
      value: "true"

    # IAM Role Validation
    - cond_type: "attribute"
      resource_types: ["AWS::IAM::Role"]
      attribute: "Properties.ManagedPolicyArns"
      operator: "contains"
      value: "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

    - cond_type: "attribute"
      resource_types: ["AWS::IAM::Policy"]
      attribute: "Properties.PolicyDocument.Statement[*].Action"
      operator: "contains"
      value: "lambda:InvokeFunction"

    # EC2 Instance Configuration
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Instance"]
      attribute: "Properties.InstanceType"
      operator: "equals"
      value: "t3.nano"

    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Instance"]
      attribute: "Properties.Tags[*].Key"
      operator: "contains"
      value: "walab-environment"

    # Security Group Configuration
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::SecurityGroup"]
      attribute: "Properties.SecurityGroupEgress[*].IpProtocol"
      operator: "equals"
      value: "-1"

    # Scheduler Admin Instance Validation
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Instance"]
      attribute: "Properties.UserData"
      operator: "regex_match"
      value: "install_scheduler_cli\.sh"

    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Instance"]
      attribute: "Properties.Tags[*].Value"
      operator: "regex_match"
      value: "walab-(admin|sample)"

    # AMI Validation
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Instance"]
      attribute: "Properties.ImageId"
      operator: "regex_match"
      value: "amzn2-ami-hvm-x86_64-gp2$"