metadata:
  id: "CKV2_CUSTOM_4"
  name: "Security Lab Stack Validation"
  category: "GENERAL_SECURITY"
  severity: "HIGH"
  guideline: "Ensure security lab components meet baseline configuration requirements"

definition:
  and:
    # EC2 Instance Validation
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Instance"]
      attribute: "Properties.InstanceType"
      operator: "equals"
      value: "t2.micro"

    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Instance"]
      attribute: "Properties.Tags[*].Key"
      operator: "contains"
      value: "Workload"

    # Security Group Configuration
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::SecurityGroup"]
      attribute: "Properties.SecurityGroupIngress[*].FromPort"
      operator: "equals"
      value: "80"

    # IAM Role Validation
    - cond_type: "attribute"
      resource_types: ["AWS::IAM::Role"]
      attribute: "Properties.ManagedPolicyArns"
      operator: "contains"
      value: "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

    # S3 Bucket Security
    - cond_type: "attribute"
      resource_types: ["AWS::S3::Bucket"]
      attribute: "Properties.BucketEncryption.ServerSideEncryptionConfiguration[0].ServerSideEncryptionByDefault.SSEAlgorithm"
      operator: "equals"
      value: "AES256"

    - cond_type: "attribute"
      resource_types: ["AWS::S3::Bucket"]
      attribute: "Properties.PublicAccessBlockConfiguration.BlockPublicAcls"
      operator: "equals"
      value: "true"

    # VPC Configuration
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::VPC"]
      attribute: "Properties.CidrBlock"
      operator: "equals"
      value: "10.0.0.0/16"

    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Subnet"]
      attribute: "Properties.MapPublicIpOnLaunch"
      operator: "equals"
      value: "true"

    # CloudWatch Logs Permissions
    - cond_type: "attribute"
      resource_types: ["AWS::S3::BucketPolicy"]
      attribute: "Properties.PolicyDocument.Statement[*].Action"
      operator: "contains"
      value: "s3:PutObject"

    # Network Routing Validation
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Route"]
      attribute: "Properties.DestinationCidrBlock"
      operator: "equals"
      value: "0.0.0.0/0"

    # Application Stack Validation
    - cond_type: "attribute"
      resource_types: ["AWS::EC2::Instance"]
      attribute: "Metadata.'AWS::CloudFormation::Init'.config.packages.yum"
      operator: "contains"
      value: "php"