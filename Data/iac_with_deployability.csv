row_number,ground_truth_path,prompt,feedback_1,feedback_level_1,feedback_2,feedback_level_2,feedback_3,feedback_level_3,feedback_4,feedback_level_4,feedback_5,feedback_level_5,feedback_6,feedback_level_6,feedback_7,feedback_level_7,feedback_8,feedback_level_8,feedback_9,feedback_level_9,feedback_10,feedback_level_10,feedback_11,feedback_level_11,feedback_12,feedback_level_12,feedback_13,feedback_level_13,feedback_14,feedback_level_14,feedback_15,feedback_level_15,feedback_16,feedback_level_16,feedback_17,feedback_level_17,feedback_18,feedback_level_18
0,Data\groud_truth\template\sqs_easy.yaml,We need a CloudFormation template that creates an AWS SQS queue with basic configuration.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,Data\groud_truth\template\sns_easy.yaml,"We need a CloudFormation template that creates an AWS SNS with notification sending to email ""test@test.com"".",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2,Data\groud_truth\template\s3_easy.yaml,We need a CloudFormation template that creates an Amazon S3 bucket with defaults,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3,Data\groud_truth\template\s3_webhost_and_deletion_policy.yaml,We need a CloudFormation template that creates an Amazon S3 bucket for website hosting and with a DeletionPolicy,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: WebsiteBucket
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,Data\groud_truth\template\ec2_easy.yaml,We need a CloudFormation template that creates an EC2 instance with the latest Amazon Linux 2 AMI,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5,Data\groud_truth\template\DynamoDB_easy.yaml,"We need a CloudFormation template that creates a DynamoDB table about ArtistId, Concert, and TicketSales.","Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,Data\groud_truth\template\EC2InstanceWithSecurityGroupSample.yaml,We need a CloudFormation template of an EC2 instance with Security Group that is able to deploy on AWS successfully.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7,Data\groud_truth\template\virtualmachine.yaml,We need a CloudFormation template that creates a basic EC2 instance (`t3.micro`) with secure remote management capabilities using AWS Systems Manager (SSM). The solution uses region-specific AMIs for compatibility and attaches a minimal security group to the instance. ,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: InstanceSecurityGroup
  Error: 'VpcId' is a dependency of 'SecurityGroupEgress'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
8,Data\groud_truth\template\CloudWatch_Dashboard_NAT_FlowLogs.yaml,"We need a CloudFormation template that creates a CloudWatch Dashboard with four CloudWatch Logs Insights log widgets that query VPC flow logs for NAT Gateway. The solution should iclude widgets for top source IPs by outbound traffic and rejected connections, using CloudWatch Logs Insights queries to filter and aggregate NAT Gateway-specific data (`interfaceId like 'eni-'`).  ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,Data\groud_truth\template\EFS_encrypted_one_zone.yaml,We need a CloudFormation template that creates an encrypted One Zone file system in the us-east-1a Availability Zone.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
10,Data\groud_truth\template\EC2_Instance_With_Ephemeral_Drives.yaml,We need a CloudFormation template of an EC2 instance with ephemeral drives attached using EC2 block device mappings that is able to deploy on AWS successfully. This template should automatically fetch the latest Amazon Linux 2 AMI via SSM Parameter Store and create an SSH key pair for secure access. Note the template should deploy the EC2 in pre-exist default vpc/subnet.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: PrivateKey
  Error: 'PrivateKey' is not one of ['KeyPairId', 'KeyFingerprint'] in ['us-east-1']",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
11,Data\groud_truth\template\dynamo.yaml,We need a CloudFormation template that creates a DynamoDB table for mobile notifications reporting. The DynamoDB table should has a global secondary index on `type` and `sentTime` for time-based queries. Configure pay-per-request billing for cost efficiency with unpredictable workloads and TTL auto-expiry for automatic cleanup of stale data. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
12,Data\groud_truth\template\EIP_With_Association.yaml,We need a CloudFormation template of an EC2 instance with an Elastic IP address and SSH access controls associated that is able to deploy on AWS successfully. Note the EC2 instance can just create in the default vpc/subnet.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
13,Data\groud_truth\template\InstanceWithCfnInit.yaml,"We need a CloudFormation template of an EC2 instance with cfn-init and cfn-signal that is able to deploy on AWS successfully. The solution should deploy an EC2 instance preconfigured with Apache HTTP Server via `cfn-init` package installation and service setup. Automate web server initialization by creating a sample `index.html` page and configuring `cfn-hup` for metadata updates, enabling automatic reconfiguration if stack parameters change. Use a CreationPolicy with ResourceSignal to pause stack creation until `cfn-signal` confirms successful instance bootstrapping (timeout: 5 minutes), preventing incomplete deployments.  ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
14,Data\groud_truth\template\SingleENIwithMultipleEIPs.yaml,We need a CloudFormation template that creates a single Elastic Network Interface (ENI) with two Elastic IPs (EIPs) and secondary private IPs which enables a single EC2 instance (not explicitly defined) to handle multiple public-facing IP addresses through one network interface.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: VpcId
  Error: Parameter VpcId not used.
- Resource: NetworkInterface
  Error: {'PrivateIpAddress': {'Ref': 'SecondaryPrivateIp1'}} is not of type 'string'
- Resource: NetworkInterface
  Error: {'PrivateIpAddress': {'Ref': 'SecondaryPrivateIp2'}} is not of type 'string'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
15,Data\groud_truth\template\apigateway_lambda_integration.yaml,We need a CloudFormation template of API Gateway with lambda non-proxy integration for RESTApi that is able to deploy on AWS successfully.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ApiMethodResponse
  Error: Resource type 'AWS::ApiGateway::MethodResponse' does not exist in 'us-east-1'
- Resource: ApiIntegration
  Error: Resource type 'AWS::ApiGateway::Integration' does not exist in 'us-east-1'",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
16,Data\groud_truth\template\glue-for-cloudtrail.yaml,"We need a CloudFormation template that creates AWS Glue resources for crawling and cataloging CloudTrail logs stored in S3 which attempts to enable structured querying via Athena. The solution should deploy a Glue Database and Crawler to analyze CloudTrail logs in an S3 bucket (`s3://kk-admin/cloud-trail/AWSLogs/`), automatically inferring schemas and creating metadata tables. Define crawler settings to handle schema updates and prefix tables with `cloudtrail_` for organizational clarity.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
17,Data\groud_truth\template\billing-alarms.yaml,"We need a CloudFormation template that creates multi-threshold AWS billing alarms using CloudWatch and SNS which monitor monthly AWS costs and send email alerts when spending exceeds predefined levels. The solution should deploy four CloudWatch alarms tracking the `EstimatedCharges` metric, triggering at $5, $10, $20, and $40 thresholds respectively. Configure an SNS topic with an email subscription to notify email address (xxxxx@gmail.com) when any alarm threshold is breached. Please monitor charges with alarms evaluated every 6 hours to balance responsiveness and noise reduction. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
18,Data\groud_truth\template\dynamodb_with_eventbridge.yaml,"We need a CloudFormation template that creates an integration between DynamoDB streams and Amazon EventBridge to automate event-driven workflows based on specific data changes. The template must configure an EventBridge Pipe to filter DynamoDB stream events (e.g., when a user's 'avatarUrl' field ends with '.png') and route matching events to the bus with predefined metadata (`DetailType` and `Source`). ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
19,Data\groud_truth\template\eventbridge.yaml,"We need a CloudFormation template that creates an Amazon EventBridge configuration to route custom events to an external API endpoint via HTTPS. The template should deploy an EventBridge event bus, an API destination ('https://webhook.site/testtest'), and a connection secured by an API key for authentication. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ApiKeyConnection
  Error: 'BasicAuthParameters' is a required property
- Resource: ApiKeyConnection
  Error: 'OAuthParameters' is a required property
- Resource: ApiKeyConnection
  Error: 'ApiKeyAuthParameters' is a required property
- Resource: ApiKeyConnection
  Error: {'ApiKey': {'Key': {'Ref': 'ApiKeyName'}, 'Value': {'Ref': 'ApiKeyValue'}}} is not valid under any of the given schemas
- Resource: ApiKeyConnection
  Error: Additional properties are not allowed ('ApiKey' was unexpected)",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ApiKeyConnection
  Error: 'Resources/ApiKeyConnection/Properties/AuthParameters' has more than 2 properties
- Resource: ApiKeyConnection
  Error: {'ApiKeyAuthParameters': {'Key': {'Ref': 'ApiKeyName'}, 'Value': {'Ref': 'ApiKeyValue'}}, 'BasicAuthParameters': {'Password': '', 'Username': ''}, 'OAuthParameters': {'AuthorizationEndpoint': 'https://example.com/oauth2/authorize', 'ClientId': '', 'ClientSecret': '', 'HttpMethod': 'GET'}} is valid under each of {'required': ['OAuthParameters']}, {'required': ['ApiKeyAuthParameters']}, {'required': ['BasicAuthParameters']}
- Resource: ApiKeyConnection
  Error: 'ApiKeyName' is a required property
- Resource: ApiKeyConnection
  Error: 'ApiKeyValue' is a required property
- Resource: ApiKeyConnection
  Error: Additional properties are not allowed ('Key' was unexpected)
- Resource: ApiKeyConnection
  Error: Additional properties are not allowed ('Value' was unexpected)
- Resource: ApiKeyConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'
- Resource: ApiKeyConnection
  Error: Password shouldn't be hardcoded for Resources/ApiKeyConnection/Properties/AuthParameters/BasicAuthParameters/Password
- Resource: ApiKeyConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'
- Resource: ApiKeyConnection
  Error: 'ClientParameters' is a required property
- Resource: ApiKeyConnection
  Error: Additional properties are not allowed ('ClientId' was unexpected)
- Resource: ApiKeyConnection
  Error: Additional properties are not allowed ('ClientSecret' was unexpected)",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
20,Data\groud_truth\template\CloudWatch_Dashboard_ClientVPN.yaml,"We need a CloudFormation template that creates a CloudWatch Dashboard and a set of CloudWatch Logs Insights queries to monitor and analyze AWS Client VPN usage patterns. The solution should aggregate metrics such as connection durations, data transfer volumes (ingress/egress), and user activity across different authentication methods (AD/SAML, Mutual Auth, and Mixed Auth). The template must organize queries into a logical folder structure and display results in a centralized dashboard with tables showing endpoint-specific usage, distinct user statistics, and authentication-type breakdowns.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: VpnEndpointIds
  Error: Parameter VpnEndpointIds not used.
- Resource: RefreshRate
  Error: Parameter RefreshRate not used.
- Resource: ConnectionMetricsFolder
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: DataTransferMetricsFolder
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: UserActivityMetricsFolder
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: AuthenticationMetricsFolder
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: AverageConnectionDurationQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: ConnectionDurationByEndpointQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: ConnectionDurationDistributionQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: IngressDataVolumeQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: EgressDataVolumeQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: DataTransferByUserQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: ActiveUsersPerDayQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: ConnectionAttemptsQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: AuthenticationTypeBreakdownQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'
- Resource: AuthenticationSuccessRateQuery
  Error: Resource type 'AWS::CloudWatchLogs::QueryDefinition' does not exist in 'us-east-1'",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: LogGroupName
  Error: Parameter LogGroupName not used.",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,
21,Data\groud_truth\template\ts_tables.yaml,"We need a CloudFormation template that creates an Amazon Timestream database and tables with configurable retention policies and error handling. The template should define four tables (poc-table-01-batch-write, poc-table-02-older-records-memonly, poc-table-03-older-records-magnetic, poc-table-04-common-attributes).","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
22,Data\groud_truth\template\DynamoDB_Secondary_Indexes.yaml,We need a CloudFormation template that creates a DynamoDB table with local and global secondary indexes.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
23,Data\groud_truth\template\DynamoDB_Table.yaml,We need a CloudFormation template that creates a DynamoDB table. ,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
24,Data\groud_truth\template\Elasticache-snapshot.yaml,"We need a CloudFormation template of a VPC containing two subnets and an auto scaling group containing instances with Internet access and ElastiCache configured with automated snapshot management and failover capabilities. It must allow optional configuration of snapshot retention policies, with a Lambda function and IAM role to enable/disable snapshotting dynamically. The template should enforce minimal infrastructure costs by defaulting to the `cache.m3.medium` instance type and include regional AZ mappings for subnet placement. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
25,Data\groud_truth\template\iot_sns_sqs.yaml,"We need a CloudFormation template that creates an IoT data pipeline to route messages from AWS IoT Core to an SQS queue via SNS. The template should deploy an SQS queue to store messages, an SNS topic to act as a pub/sub intermediary, and an IoT Rule to capture messages from the `device/data` MQTT topic. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
26,Data\groud_truth\template\s3_sns.yaml,"We need a CloudFormation template that creates an S3 bucket integrated with Amazon EventBridge and SNS to notify subscribers about object creation events. The template should deploy an S3 bucket configured to send events to EventBridge, an SNS topic for message distribution, and an EventBridge rule that triggers on `Object Created` events from the bucket.","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
27,Data\groud_truth\template\sam_kinesis.yaml,"We need a CloudFormation template that creates a real-time data ingestion and storage pipeline using Amazon Kinesis Data Stream and Kinesis Data Firehose, which delivers the data to an S3 bucket. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
28,Data\groud_truth\template\sns_for_secret_manager.yaml,"We need a CloudFormation template that creates an automated monitoring and notification system for AWS Secrets Manager secret lifecycle events, which sends alerts via Amazon SNS when secrets are created, updated, or accessed. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: SecretsManagerCreateRuleNoPrefix
  Error: {'Fn::Not': ['HasSecretNamePrefix']} is not of type 'string'
- Resource: SecretsManagerUpdateRuleNoPrefix
  Error: {'Fn::Not': ['HasSecretNamePrefix']} is not of type 'string'
- Resource: SecretsManagerDeleteRuleNoPrefix
  Error: {'Fn::Not': ['HasSecretNamePrefix']} is not of type 'string'
- Resource: SecretsManagerTrailBucket
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
29,Data\groud_truth\template\parameter-store-demo.yaml,"We need a CloudFormation template that creates secure parameter storage and retrieval workflows using AWS Systems Manager (SSM) Parameter Store and Secrets Manager which demonstrates centralized configuration management for serverless applications. The solution should define SSM Parameters under a stack-specific namespace to store non-sensitive configuration values (e.g., ""This is A/B""). Generate a Secrets Manager secret with a dynamically created password and predefined username, enforcing security constraints (e.g., excluded characters). Deploy a Lambda function to fetch and decrypt parameters/secrets using Boto3, showcasing path-based SSM parameter retrieval and Secrets Manager secret decryption workflows. Attach IAM roles/policies to grant the Lambda permissions for SSM, Secrets Manager, and CloudWatch logging, ensuring least-privilege access.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ConfigParameterSecure
  Error: 'SecureString' is not one of ['String', 'StringList']",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
30,Data\groud_truth\template\efs-provisioned.yaml,"We need a CloudFormation template that creates a EFS file system with cross-AZ EC2 instances and performance monitoring which provides shared storage for applications requiring multi-AZ accessibility. The solution should also launch two EC2 instances in separate AZs with IAM roles granting EFS access and SSM permissions, automating EFS mounting via user data scripts that retry until mount targets are available. Configure CloudWatch alarms to monitor EFS I/O limits and throughput utilization, triggering alerts at 95% I/O limit and 80% throughput thresholds. Note to establish a VPC with public subnets, internet gateway, and network ACLs to support EFS and EC2 connectivity while enforcing security group rules for controlled NFS access. Use cfn-signal and CreationPolicies to ensure instances successfully mount EFS before stack completion, avoiding partial deployments.  ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
31,Data\groud_truth\template\codedeploy.yaml,"We need a CloudFormation template that creates an automated deployment pipeline for the Etherpad application using AWS CodeDeploy. The template should deploy Etherpad on EC2 instances within an Auto Scaling group across two subnets, fronted by an internet-facing Application Load Balancer for traffic distribution. It must provision a MySQL RDS instance for database storage and integrate AWS Systems Manager (SSM) for secure parameter storage. The solution should automate instance provisioning with a launch template that installs dependencies (Node.js, CodeDeploy agent) and signals CloudFormation upon readiness. An S3 bucket stores deployment artifacts, while CodeDeploy resources manage application updates. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: RDSInstance
  Error: '8.0' is not one of ['5.7.44', '5.7.44-rds.20240408', '5.7.44-rds.20240529', '5.7.44-rds.20240808', '8.0.32', '8.0.33', '8.0.34', '8.0.35', '8.0.36', '8.0.37', '8.0.39', '8.0.40', '8.4.3']
- Resource: RDSInstance
  Error: Use dynamic references over parameters for secrets
- Resource: DBCredentialsParameter
  Error: 'SecureString' is not one of ['String', 'StringList']
- Resource: EtherpadConfigParameter
  Error: 'RDSInstance' dependency already enforced by a 'GetAtt' at 'Resources/EtherpadConfigParameter/Properties/Value'
- Resource: CodeDeployDeploymentGroup
  Error: 'AutoScalingGroup' dependency already enforced by a 'Ref' at 'Resources/CodeDeployDeploymentGroup/Properties/AutoScalingGroups/0'",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: RDSInstance
  Error: Use dynamic references over parameters for secrets
- Resource: DBCredentialsParameter
  Error: 'Arn' is not one of ['Id'] in ['us-east-1']",detailed,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,
32,Data\groud_truth\template\LambdaSample.yaml,We need a CloudFormation template that creates a Lambda sample.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
33,Data\groud_truth\template\lab3.1.4.iamrole.yaml,"We need a CloudFormation template that creates IAM roles for EC2 instances with read-only access to IAM metadata, which allows them to retrieve and list IAM resources. The template should define two roles that trust the EC2 service, attach a managed policy granting permissions for `iam:Get*` and `iam:List*` actions across all IAM resources.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
34,Data\groud_truth\template\RDS_PIOPS.yaml,"We need a CloudFormation template that creates a MySQL RDS instance (db.r5.large) with Provisioned IOPS (io1 storage) within a VPC. The solution should deploy the database across two private subnets in different Availability Zones using a DB subnet group, with network isolation via a dedicated VPC and a security group restricting access to port 3306 for internal VPC traffic. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: DBInstance
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion
- Resource: DBInstance
  Error: '8.0.28' is not one of ['5.7.44', '5.7.44-rds.20240408', '5.7.44-rds.20240529', '5.7.44-rds.20240808', '8.0.32', '8.0.33', '8.0.34', '8.0.35', '8.0.36', '8.0.37', '8.0.39', '8.0.40', '8.4.3']
- Resource: DBInstance
  Error: Use dynamic references over parameters for secrets",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
35,Data\groud_truth\template\RDS_Snapshot_On_Delete.yaml,"We need a CloudFormation template that creates MySQL RDS instance (db.t3.micro) with automated snapshots and basic networking infrastructure. The template should deploy the database in a VPC with public subnets across two Availability Zones, using a route table and internet gateway for external connectivity. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: MySQLDBInstance
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion
- Resource: MySQLDBInstance
  Error: Use dynamic references over parameters for secrets",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
36,Data\groud_truth\template\RDS_with_DBParameterGroup.yaml,We need a CloudFormation template that creates a MySQL RDS instance (db.t3.micro) with a custom parameter group and secure network isolation. The template should deploy the database in a VPC with two subnets across Availability Zones. It must integrate AWS Secrets Manager to securely generate and manage admin credentials. ,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template failed at the yaml_validation stage. Check below for the error details.
YAML Syntax Error: Line 209: too many spaces inside brackets
Line 210: too many spaces inside brackets",detailed,"Based on the evaluation, the template failed at the yaml_validation stage. Check below for the error details.
YAML Syntax Error: Line 209: too many spaces inside brackets
Line 210: too many spaces inside brackets",detailed,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the yaml_validation stage. Check below for the error details.
YAML Syntax Error: Line 209: too many spaces inside brackets",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: RDSInstance
  Error: Found an embedded parameter ""${AWS::StackName}"" outside of an ""Fn::Sub"" at Resources/RDSInstance/Properties/MasterUserPassword
- Resource: RDSInstance
  Error: 'DBSubnetGroup' dependency already enforced by a 'Ref' at 'Resources/RDSInstance/Properties/DBSubnetGroupName'
- Resource: RDSInstance
  Error: 'RDSSecurityGroup' dependency already enforced by a 'Ref' at 'Resources/RDSInstance/Properties/VPCSecurityGroups/0'
- Resource: RDSInstance
  Error: 'DBParameterGroup' dependency already enforced by a 'Ref' at 'Resources/RDSInstance/Properties/DBParameterGroupName'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,
37,Data\groud_truth\template\compliant-bucket.yaml,We need a CloudFormation template that creates a secure bucket that passes default security scanning checks. Includes a bucket to store replicas and an access log bucket. Server side encryption is enabled. Public access is disabled. The bucket policy requires secure transport.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: LogBucket
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion
- Resource: ReplicaBucket
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion
- Resource: ReplicationRole
  Error: Circular Dependencies for resource ReplicationRole. Circular dependency with [MainBucket]
- Resource: MainBucket
  Error: Circular Dependencies for resource MainBucket. Circular dependency with [ReplicationRole]
- Resource: MainBucket
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: MainBucketReplication
  Error: Resource type 'AWS::S3::BucketReplicationConfiguration' does not exist in 'us-east-1'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
38,Data\groud_truth\template\S3_LambdaTrigger.yaml,We need a CloudFormation template that creates a S3 bucket trigger lambda function.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: S3Bucket
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion
- Resource: LambdaFunction
  Error: 'LambdaExecutionRole' dependency already enforced by a 'GetAtt' at 'Resources/LambdaFunction/Properties/Role'
- Resource: LambdaPermission
  Error: 'LambdaFunction' dependency already enforced by a 'GetAtt' at 'Resources/LambdaPermission/Properties/FunctionName'
- Resource: BucketNotification
  Error: Resource type 'AWS::S3::BucketNotification' does not exist in 'us-east-1'
- Resource: BucketNotification
  Error: 'S3Bucket' dependency already enforced by a 'Ref' at 'Resources/BucketNotification/Properties/Bucket'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
39,Data\groud_truth\template\ecr.yaml,"We need a CloudFormation template that creates an Amazon ECR repository, which include a repository policy granting the AWS account root user permissions to perform critical ECR actions, for Kubernetes container image management. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ECRRepositoryPolicy
  Error: Resource type 'AWS::ECR::RepositoryPolicy' does not exist in 'us-east-1'",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
40,Data\groud_truth\template\SQSFIFOQueue.yaml,We need a CloudFormation template that creates SQS FIFO Queue.,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
41,Data\groud_truth\template\SQSStandardQueue.yaml,We need a CloudFormation template that creates SQS Standard Queue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
42,Data\groud_truth\template\FindInMapAZs.yaml,"We need a CloudFormation template that creates a VPC, with a pair of public and private subnets, in total three, spread across two Availability Zones. It uses a static AZ Mapping known as RegionMap to ensure that your resources persist in a given Availability Zone if we add or remove zones.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
43,Data\groud_truth\template\lab2.2.4.create.yaml,We need a CloudFormation template that creates a S3 bucket with integrated AWS KMS encryption and lifecycle management. The template must include a KMS key alias for simplified key management and tag the bucket for organizational tracking. ,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
44,Data\groud_truth\template\VPC_With_Managed_NAT_And_Private_Subnet.yaml,"We need a CloudFormation template that creates a VPC with Managed NAT. Note, you can assume there are four subnets.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
45,Data\groud_truth\template\DataFirehoseDeliveryStream.yaml,We need a CloudFormation template that creates an Amazon Data Firehose stream with server-side encryption set using AWS Managed keys and destination error logging enabled to a created Amazon CloudWatch log group and log stream.,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
46,Data\groud_truth\template\recovery.yaml,"We need a CloudFormation template that creates a resilient Jenkins CI/CD server with automated hardware failure recovery and secure access. The template should deploy Jenkins on an EC2 instance within a VPC, using a static Elastic IP for consistent public access and a security group allowing HTTP/ICMP traffic. It must automatically recover the instance via a CloudWatch alarm if system-level failures occur, ensuring continuity. The solution integrates an IAM role for Systems Manager (SSM) access, enabling secure management without SSH.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
47,Data\groud_truth\template\lab3.1.3.iamrole.yaml,"We need a CloudFormation template that creates IAM roles for EC2 instances with restricted read-only access to AWS IAM metadata, which enables them to retrieve and list IAM resources without modification rights. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
48,Data\groud_truth\template\010_resources.yaml,"We need a CloudFormation template that creates an AWS Glue ETL job infrastructure. The template should provision an S3 bucket to store Glue scripts and Spark logs, define an IAM role granting AWS Glue permissions to access S3 and execute jobs, and configure a Glue job with version 4.0 using Python scripts from the bucket (gue_scripts/sample_convert.py). ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
49,Data\groud_truth\template\ecs_serverless_with_fargate.yaml,We need a CloudFormation template that creates a simple Amazon ECS cluster that is setup for serverless usage with AWS Fargate.,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
50,Data\groud_truth\template\url2png-loadtest.yaml,"We need a CloudFormation template that creates a scalable URL-to-PNG screenshot service with automated load testing and S3/SQS integration, designed to dynamically process website screenshot requests and store results in a secure, distributed environment. The template should deploy an Auto Scaling group of EC2 instances (workers) across two Availability Zones, configured to consume messages from an SQS queue and generate screenshots using Chromium, saving outputs to an S3 bucket. It must include a load test instance that populates the queue with sample URL requests to simulate traffic, while CloudWatch alarms trigger scaling policies based on queue depth (scaling up/down between 1-2 instances). ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: WorkerLaunchTemplate
  Error: 'crypto' is not one of ['ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance']
- Resource: WorkerLaunchTemplate
  Error: 'url' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']
- Resource: WorkerLaunchTemplate
  Error: 'data' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']
- Resource: WorkerLaunchTemplate
  Error: 'code' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']
- Resource: WorkerLaunchTemplate
  Error: 'timestamp' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']
- Resource: WorkerLaunchTemplate
  Error: 'urlHash' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']
- Resource: WorkerLaunchTemplate
  Error: 'bucketName' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']
- Resource: WorkerLaunchTemplate
  Error: 's3Key' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']
- Resource: LoadTestInstance
  Error: 'url' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']
- Resource: LoadTestInstance
  Error: 'result' is not one of ['ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance']
- Resource: LoadTestInstance
  Error: 'numMessages' is not one of ['VpcId', 'SubnetId1', 'SubnetId2', 'KeyName', 'WorkerInstanceType', 'LoadTestInstanceType', 'S3BucketPrefix', 'MinCapacity', 'MaxCapacity', 'ScreenshotBucket', 'ScreenshotDLQ', 'ScreenshotQueue', 'ScreenshotServiceRole', 'ScreenshotServicePolicy', 'LoadTestRole', 'LoadTestPolicy', 'ScreenshotServiceInstanceProfile', 'LoadTestInstanceProfile', 'WorkerSecurityGroup', 'LoadTestSecurityGroup', 'WorkerLaunchTemplate', 'WorkerAutoScalingGroup', 'QueueDepthAlarmHigh', 'QueueDepthAlarmLow', 'ScaleUpPolicy', 'ScaleDownPolicy', 'LoadTestInstance', 'AWS::AccountId', 'AWS::NoValue', 'AWS::NotificationARNs', 'AWS::Partition', 'AWS::Region', 'AWS::StackId', 'AWS::StackName', 'AWS::URLSuffix']",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
51,Data\groud_truth\template\loadbalancer.yaml,"We need a CloudFormation template that creates a web server infrastructure with an Application Load Balancer (ALB) and Auto Scaling group, designed to distribute traffic across multiple EC2 instances in different Availability Zones for scalability and fault tolerance. The template must provision EC2 instances via a launch template that installs and configures Apache HTTP Server, ensuring each instance dynamically generates a unique HTML page. The solution enforces security via IAM roles for SSM access, and restricts web server traffic to the ALB. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
52,Data\groud_truth\template\Route53-ARC-routing-control.yaml,"We need a CloudFormation template that creates a multi-region application failover architecture using Amazon Route 53 Application Recovery Controller (ARC). The template should configure a recovery cluster and control panel, define routing controls for two AWS regions, enforce a safety rule to maintain at least one active region at all times, and set up health checks linked to routing controls for monitoring regional application health. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'AssertionRule' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'GatingRule' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: {'Name': 'AtLeastOneActiveRegionRule', 'ControlPanelArn': {'Fn::GetAtt': ['ControlPanel', 'ControlPanelArn']}, 'RuleConfig': {'Type': 'ASSERTION', 'AssertionRule': {'AssertedControls': [{'Fn::GetAtt': ['PrimaryRegionRoutingControl', 'RoutingControlArn']}, {'Fn::GetAtt': ['SecondaryRegionRoutingControl', 'RoutingControlArn']}], 'WaitPeriodMs': 5000}}, 'Status': 'DEPLOYED'} is not valid under any of the given schemas
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'Threshold' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'Inverted' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'ASSERTION' is not one of ['AND', 'OR', 'ATLEAST']
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: Additional properties are not allowed ('AssertionRule' was unexpected)",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'RuleConfig' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'GatingRule' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: {'Name': 'AtLeastOneActiveRegionRule', 'ControlPanelArn': {'Fn::GetAtt': ['ControlPanel', 'ControlPanelArn']}, 'AssertionRule': {'AssertedControls': [{'Fn::GetAtt': ['PrimaryRegionRoutingControl', 'RoutingControlArn']}, {'Fn::GetAtt': ['SecondaryRegionRoutingControl', 'RoutingControlArn']}], 'WaitPeriodMs': 5000}, 'Status': 'DEPLOYED'} is not valid under any of the given schemas",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'AssertionRule' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'GatingRule' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: {'Name': 'AtLeastOneActiveRegionRule', 'ControlPanelArn': {'Fn::GetAtt': ['ControlPanel', 'ControlPanelArn']}, 'RuleConfig': {'Type': 'ASSERTION', 'AssertionRule': {'AssertedControls': [{'Fn::GetAtt': ['PrimaryRegionRoutingControl', 'RoutingControlArn']}, {'Fn::GetAtt': ['SecondaryRegionRoutingControl', 'RoutingControlArn']}], 'WaitPeriodMs': 5000}}, 'Status': 'DEPLOYED'} is not valid under any of the given schemas
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'Threshold' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'Inverted' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'ASSERTION' is not one of ['AND', 'OR', 'ATLEAST']
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: Additional properties are not allowed ('AssertionRule' was unexpected)",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'AssertionRule' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'RuleConfig' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: {'Name': 'AtLeastOneActiveRegionRule', 'ControlPanelArn': {'Fn::GetAtt': ['ControlPanel', 'ControlPanelArn']}, 'GatingRule': {'GatingControls': [{'Fn::GetAtt': ['PrimaryRegionRoutingControl', 'RoutingControlArn']}, {'Fn::GetAtt': ['SecondaryRegionRoutingControl', 'RoutingControlArn']}], 'Type': 'ATLEAST', 'Threshold': 1, 'Inverted': False, 'WaitPeriodMs': 5000}, 'Status': 'DEPLOYED'} is not valid under any of the given schemas
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: 'TargetControls' is a required property
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: Additional properties are not allowed ('Type' was unexpected)
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: Additional properties are not allowed ('Threshold' was unexpected)
- Resource: AtLeastOneActiveRegionSafetyRule
  Error: Additional properties are not allowed ('Inverted' was unexpected)",detailed,"Based on the evaluation, the template contains Deployment Errors.",advanced,,advanced,,general,,,,,,,,,,,,,,,,,,
53,Data\groud_truth\template\010_emr_serverless.yaml,"We need a CloudFormation template that creates an AWS EMR Serverless environment. The template should provision an IAM role granting EMR Serverless permissions to interact with S3 and CloudWatch Logs, deploy a private S3 bucket for storing scripts and data, and configure an EMR Serverless application (`emr-6.15.0` Spark) with auto-start/auto-stop features to minimize idle costs.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: EMRServerlessApplication
  Error: 'WorkerCount' is a required property
- Resource: EMRServerlessApplication
  Error: 'WorkerConfiguration' is a required property
- Resource: EMRServerlessApplication
  Error: Additional properties are not allowed ('Cpu' was unexpected)
- Resource: EMRServerlessApplication
  Error: Additional properties are not allowed ('Memory' was unexpected)
- Resource: EMRServerlessApplication
  Error: 'WorkerCount' is a required property
- Resource: EMRServerlessApplication
  Error: 'WorkerConfiguration' is a required property
- Resource: EMRServerlessApplication
  Error: Additional properties are not allowed ('Cpu' was unexpected)
- Resource: EMRServerlessApplication
  Error: Additional properties are not allowed ('Memory' was unexpected)
- Resource: EMRServerlessApplication
  Error: Additional properties are not allowed ('Count' was unexpected)",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: EMRServerlessApplication
  Error: {'Fn::Mul': [{'Ref': 'MaximumCapacity'}, 4096]} is not of type 'string'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
54,Data\groud_truth\template\central_alert.yaml,"We need a CloudFormation template that creates a centralized Amazon SNS topic with secure cross-service notification capabilities and email subscription, designed to aggregate alerts and events from AWS services into a single channel. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
55,Data\groud_truth\template\client_security_group.yaml,We need a CloudFormation template that creates a vpc with security group.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
56,Data\groud_truth\template\cognito_userpool.yaml,"We need a CloudFormation template that creates a secure Amazon Cognito User Pool with administrator-controlled user provisioning and email-based authentication, designed for applications requiring centralized user management. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
57,Data\groud_truth\template\simple_ecs.yaml,"We need a CloudFormation template that creates a basic Amazon ECS cluster with configurable monitoring capabilities, designed to serve as a foundational component for containerized workloads. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
58,Data\groud_truth\template\efs_file_system.yaml,"We need a CloudFormation template that creates a scalable and monitored Amazon EFS file system with automated backups and performance safeguards, designed for shared storage in a VPC-based environment. The template must integrate CloudWatch alarms to monitor IO utilization, burst credits, and throughput thresholds for proactive performance management. Automated backups via AWS Backup should be conditionally enabled with a customizable CRON schedule. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
59,Data\groud_truth\template\kinesis-data-stream.yaml,We need a CloudFormation template that creates an Amazon Kinesis Data Stream for real-time data ingestion and processing and alerts for read and write throughput exceeding.,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
60,Data\groud_truth\template\kms-key.yaml,We need a CloudFormation template that creates an AWS KMS (Key Management Service) Key for centralized encryption management. Remember to include the Alias for the key.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
61,Data\groud_truth\template\route53-hosted-zone-private.yaml,"We need a CloudFormation template that creates a private Amazon Route 53 Hosted Zone for internal DNS management within a VPC. Note the domain is: ""www.example.com"".","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
62,Data\groud_truth\template\rds_2db_instance.yaml,"We need a CloudFormation template that creates a Amazon Aurora MySQL cluster with two database instances and customized database parameter groups. It must include two publicly accessible `db.t3.large` instances for redundancy, with parameter groups enforcing database-specific settings like `time_zone` and `sql_mode`. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: DBCluster
  Error: Use dynamic references over parameters for secrets
- Resource: ClusterEndpoint
  Error: {'Fn::GetAtt': ['DBCluster', 'Endpoint']} is not of type 'string'
- Resource: ReaderEndpoint
  Error: 'ReadEndpoint' is not one of ['DBClusterArn', 'DBClusterResourceId', 'Endpoint', 'Endpoint.Address', 'Endpoint.Port', 'ReadEndpoint.Address', 'MasterUserSecret.SecretArn', 'StorageThroughput'] in ['us-east-1']
- Resource: Instance1Endpoint
  Error: 'Endpoint' is not one of ['AllocatedStorage', 'AllowMajorVersionUpgrade', 'AssociatedRoles', 'AutoMinorVersionUpgrade', 'AutomaticBackupReplicationKmsKeyId', 'AutomaticBackupReplicationRegion', 'AvailabilityZone', 'BackupRetentionPeriod', 'CACertificateIdentifier', 'CertificateDetails.CAIdentifier', 'CertificateDetails.ValidTill', 'CertificateRotationRestart', 'CharacterSetName', 'CopyTagsToSnapshot', 'CustomIAMInstanceProfile', 'DBClusterIdentifier', 'DBClusterSnapshotIdentifier', 'DBInstanceArn', 'DBInstanceClass', 'DBInstanceIdentifier', 'DBName', 'DBParameterGroupName', 'DBSecurityGroups', 'DBSnapshotIdentifier', 'DBSubnetGroupName', 'DBSystemId', 'DbiResourceId', 'DedicatedLogVolume', 'DeleteAutomatedBackups', 'DeletionProtection', 'Domain', 'DomainAuthSecretArn', 'DomainDnsIps', 'DomainFqdn', 'DomainIAMRoleName', 'DomainOu', 'EnableCloudwatchLogsExports', 'EnableIAMDatabaseAuthentication', 'EnablePerformanceInsights', 'Endpoint.Address', 'Endpoint.HostedZoneId', 'Endpoint.Port', 'Engine', 'EngineLifecycleSupport', 'EngineVersion', 'Iops', 'KmsKeyId', 'LicenseModel', 'ManageMasterUserPassword', 'MasterUserPassword', 'MasterUserSecret.KmsKeyId', 'MasterUserSecret.SecretArn', 'MasterUsername', 'MaxAllocatedStorage', 'MonitoringInterval', 'MonitoringRoleArn', 'MultiAZ', 'NcharCharacterSetName', 'NetworkType', 'OptionGroupName', 'PerformanceInsightsKMSKeyId', 'PerformanceInsightsRetentionPeriod', 'Port', 'PreferredBackupWindow', 'PreferredMaintenanceWindow', 'ProcessorFeatures', 'PromotionTier', 'PubliclyAccessible', 'ReplicaMode', 'RestoreTime', 'SourceDBClusterIdentifier', 'SourceDBInstanceAutomatedBackupsArn', 'SourceDBInstanceIdentifier', 'SourceDbiResourceId', 'SourceRegion', 'StorageEncrypted', 'StorageThroughput', 'StorageType', 'Tags', 'TdeCredentialArn', 'TdeCredentialPassword', 'Timezone', 'UseDefaultProcessorFeatures', 'UseLatestRestorableTime', 'VPCSecurityGroups'] in ['us-east-1']
- Resource: Instance2Endpoint
  Error: 'Endpoint' is not one of ['AllocatedStorage', 'AllowMajorVersionUpgrade', 'AssociatedRoles', 'AutoMinorVersionUpgrade', 'AutomaticBackupReplicationKmsKeyId', 'AutomaticBackupReplicationRegion', 'AvailabilityZone', 'BackupRetentionPeriod', 'CACertificateIdentifier', 'CertificateDetails.CAIdentifier', 'CertificateDetails.ValidTill', 'CertificateRotationRestart', 'CharacterSetName', 'CopyTagsToSnapshot', 'CustomIAMInstanceProfile', 'DBClusterIdentifier', 'DBClusterSnapshotIdentifier', 'DBInstanceArn', 'DBInstanceClass', 'DBInstanceIdentifier', 'DBName', 'DBParameterGroupName', 'DBSecurityGroups', 'DBSnapshotIdentifier', 'DBSubnetGroupName', 'DBSystemId', 'DbiResourceId', 'DedicatedLogVolume', 'DeleteAutomatedBackups', 'DeletionProtection', 'Domain', 'DomainAuthSecretArn', 'DomainDnsIps', 'DomainFqdn', 'DomainIAMRoleName', 'DomainOu', 'EnableCloudwatchLogsExports', 'EnableIAMDatabaseAuthentication', 'EnablePerformanceInsights', 'Endpoint.Address', 'Endpoint.HostedZoneId', 'Endpoint.Port', 'Engine', 'EngineLifecycleSupport', 'EngineVersion', 'Iops', 'KmsKeyId', 'LicenseModel', 'ManageMasterUserPassword', 'MasterUserPassword', 'MasterUserSecret.KmsKeyId', 'MasterUserSecret.SecretArn', 'MasterUsername', 'MaxAllocatedStorage', 'MonitoringInterval', 'MonitoringRoleArn', 'MultiAZ', 'NcharCharacterSetName', 'NetworkType', 'OptionGroupName', 'PerformanceInsightsKMSKeyId', 'PerformanceInsightsRetentionPeriod', 'Port', 'PreferredBackupWindow', 'PreferredMaintenanceWindow', 'ProcessorFeatures', 'PromotionTier', 'PubliclyAccessible', 'ReplicaMode', 'RestoreTime', 'SourceDBClusterIdentifier', 'SourceDBInstanceAutomatedBackupsArn', 'SourceDBInstanceIdentifier', 'SourceDbiResourceId', 'SourceRegion', 'StorageEncrypted', 'StorageThroughput', 'StorageType', 'Tags', 'TdeCredentialArn', 'TdeCredentialPassword', 'Timezone', 'UseDefaultProcessorFeatures', 'UseLatestRestorableTime', 'VPCSecurityGroups'] in ['us-east-1']",detailed,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
63,Data\groud_truth\template\rds_psql_export.yaml,We need a CloudFormation template that creates an Amazon Aurora MySQL cluster with CloudWatch Logs integration. The template should deploy a multi-AZ Aurora cluster with two publicly accessible instances (`db.t3.large`) across two subnets. It must enable error log exports to CloudWatch for monitoring and troubleshooting.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: DBCluster
  Error: '5.7.mysql_aurora.2.10.2' is not one of ['5.7', '5.7.mysql_aurora.2.11.1', '5.7.mysql_aurora.2.11.2', '5.7.mysql_aurora.2.11.3', '5.7.mysql_aurora.2.11.4', '5.7.mysql_aurora.2.11.4', '5.7.mysql_aurora.2.11.5', '5.7.mysql_aurora.2.11.6', '5.7.mysql_aurora.2.12.0', '5.7.mysql_aurora.2.12.1', '5.7.mysql_aurora.2.12.2', '5.7.mysql_aurora.2.12.3', '5.7.mysql_aurora.2.12.4', '8.0', '8.0.mysql_aurora.3.04.0', '8.0.mysql_aurora.3.04.1', '8.0.mysql_aurora.3.04.2', '8.0.mysql_aurora.3.04.3', '8.0.mysql_aurora.3.05.2', '8.0.mysql_aurora.3.06.0', '8.0.mysql_aurora.3.06.1', '8.0.mysql_aurora.3.07.0', '8.0.mysql_aurora.3.07.1', '8.0.mysql_aurora.3.08.0']
- Resource: DBCluster
  Error: Use dynamic references over parameters for secrets",detailed,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: DBCluster
  Error: Use dynamic references over parameters for secrets",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,
64,Data\groud_truth\template\arch6-lab3.yaml,"We need a CloudFormation template that creates a web application environment with a public-facing EC2 instance in a VPC. The template should deploy a VPC with public and private subnets, an internet gateway, and route tables to enable public internet access for the web server. It must provision an EC2 instance in the public subnet with Apache HTTP Server, PHP, and a sample inventory application pre-installed via user data scripts. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
65,Data\groud_truth\template\lambda_template.yaml,We need a CloudFormation template that creates a AWS Lambda function with a Node.js 20.x runtime that print hello world.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
66,Data\groud_truth\template\create_vpc_example.yaml,"We need a CloudFormation template that creates a VPC with a single public subnet, internet gateway, and associated routing infrastructure, designed to enable internet accessibility for resources while providing foundational networking for demonstrations like CloudWatch EC2 auto-alarms.","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
67,Data\groud_truth\template\cloudwatch-config-s3-bucket.yaml,We need a CloudFormation template that creates an Amazon S3 bucket that can be made accessible to an entire AWS Organization or Organization Unit. It must also allow flexibility for single-account use (when no Organization ID is given) or enterprise-wide access.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: OrgBucketPolicy
  Error: Primary identifiers {'Bucket': {'Ref': 'S3Bucket'}} should have unique values across the resources {'OUBucketPolicy', 'OrgBucketPolicy'}
- Resource: OUBucketPolicy
  Error: Primary identifiers {'Bucket': {'Ref': 'S3Bucket'}} should have unique values across the resources {'OUBucketPolicy', 'OrgBucketPolicy'}",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: BucketPolicy
  Error: ['Fn::If', 2] is not reachable. When setting condition 'HasOrganizationalUnitId' to False. Where existing status for condition 'HasOrganizationId' is False and condition 'HasAnyOrgAccess' is True",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: OrgBucketPolicy
  Error: Primary identifiers {'Bucket': {'Ref': 'S3Bucket'}} should have unique values across the resources {'OrgBucketPolicy', 'OUBucketPolicy'}
- Resource: OUBucketPolicy
  Error: Primary identifiers {'Bucket': {'Ref': 'S3Bucket'}} should have unique values across the resources {'OrgBucketPolicy', 'OUBucketPolicy'}",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,
68,Data\groud_truth\template\ssm-cloudwatch-instance-role.yaml,We need a CloudFormation template that creates an IAM role with AWS managed policy and instance profile for EC2 instances with permissions to integrate with Amazon CloudWatch and AWS Systems Manager (SSM) ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
69,Data\groud_truth\template\s3_dynamodb.yaml,"We need a CloudFormation template that creates a VPC, Security Group, S3 Bucket, and DynamoDB Table with deletion protection enabled.","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
70,Data\groud_truth\template\base-network.yaml,"We need a CloudFormation template that creates a multi-AZ VPC with two public and two private subnets, route tables, and routes to the Internet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
71,Data\groud_truth\template\resource-dependencies-challenge.yaml,"We need a CloudFormation template that creates an EC2 instance with a security group allowing HTTP access, and an S3 bucket.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: S3Bucket
  Error: 'AccessControl' is a legacy property. Consider using 'AWS::S3::BucketPolicy' instead",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
72,Data\groud_truth\template\code-server-stack.yaml,"We need a CloudFormation template that deploys a secure, web-based VS Code development environment on an EC2 instance (Ubuntu 22.04) with code-server (configurable version) bound to port 8080, disabling authentication for simplified access. It restricts inbound traffic to CloudFront's regional IP ranges via a VPC, public subnet, and security group rules, while leveraging CloudFront for global HTTPS access, caching (custom policy with 1-year TTL), and request forwarding. The EC2 instance integrates with SSM for management, uses predefined IAM roles, and outputs critical details like CloudFront URL and instance metadata. Designed for demo use, it prioritizes ease of deployment with trade-offs like open HTTP origin and disabled TLS enforcement, requiring additional hardening for production.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: CloudFrontDistribution
  Error: 'EC2Instance' dependency already enforced by a 'GetAtt' at 'Resources/CloudFrontDistribution/Properties/DistributionConfig/Origins/0/DomainName'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
73,Data\groud_truth\template\easy-ecs-cluster.yaml,We need a CloudFormation template that creates an Amazon ECS cluster configured to leverage both Fargate and Fargate Spot capacity providers.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
74,Data\groud_truth\template\task-def-book.yaml,"We need a CloudFormation template that creates an ECS Fargate task definition and associated IAM roles to deploy a containerized application using AWS infrastructure. The template should define a task role with permissions for SSM session management (to enable executing commands into the container) and a task execution role with standard ECR image-pulling and logging capabilities. The task definition must configure a container using a public NGINX image (for simplicity in the demo), expose port 80, and integrate with AWS CloudWatch Logs for centralized logging with a 7-day retention policy. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
75,Data\groud_truth\template\CPUStressInstances.yaml,"We need a CloudFormation template that creates a Windows EC2 instance and associated AWS resources to enable CPU stress testing. The template should provision a Windows Server 2019 instance with SSM agent integration (using IAM roles and instance profiles) to allow remote command execution. It must include a custom SSM document containing a PowerShell script to simulate CPU stress by spawning threads equal to the instance's logical processors for a configurable duration. The stack should parameterize key configurations like AMI selection (via SSM), instance type (t3.nano to t3.large), and subnet usage (with a fallback to default VPC logic). Additionally, an IAM role for FIS must grant permissions to trigger SSM commands, manage logs in CloudWatch, and interact with EC2 instances. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
76,Data\groud_truth\template\setup-users.yaml,"We need a CloudFormation template that creates four IAM roles with tiered permissions to manage access controls. The template should define distinct roles for Security Admins, Admins, Users, and Non-Users, each with granular policies:

Security Admins get full FIS access, role-passing privileges for workshop-specific service roles, and permission to create service-linked roles.

Admins inherit similar permissions but explicitly deny access to FIS resources tagged as ""prod"" environments.

Users are restricted to starting/stopping experiments, viewing FIS resources, and tagging experiments while blocking production access.

Non-Users retain read-only AWS access but are explicitly denied all FIS actions.

All roles should include foundational permissions like AWS ReadOnlyAccess and conditional role-passing to FIS. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
77,Data\groud_truth\template\dynamo-tables.yaml,"We need a CloudFormation template that creates environment-specific DynamoDB tables to store supporter product data, with configurations tailored for production (PROD) and non-production (CODE) environments. The template should:

For PROD:
Deploy a table with provisioned throughput (20 read/5 write capacity units) and auto-scaling for write capacity (min 5, max 500) using a target-tracking policy.
Include encryption (SSE), time-to-live (TTL) for expiryDate, and backup tagging.

For CODE:
Use on-demand billing (PAY_PER_REQUEST) to minimize costs while retaining encryption, TTL, and backup settings.
Dynamically name tables (e.g., SupporterProductData-${Stage}) and conditionally provision resources based on the Stage parameter (PROD/CODE).","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
78,Data\groud_truth\template\ipam.yaml,"We need a CloudFormation template that creates an AWS EC2 IP Address Manager (IPAM) to manage IP address allocation. Note to export critical identifiers like the IPAM ARN, ID, and default public/private scope IDs as stack outputs for cross-stack references (e.g., linking to VPCs or subnet configurations in other templates).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
79,Data\groud_truth\template\iam-policies.yaml,"We need a CloudFormation template that creates three IAM managed policies including:
1. S3 Access Policy: Grants an iOS application read/write access to a specific S3 bucket (ios-apps.sagebridge.org), including object operations (upload, download, delete) and bucket listing/location permissions.
2. DynamoDB Protection Policy: Explicitly denies deletion or schema-modification actions (e.g., DeleteTable, UpdateTable) to prevent accidental data loss in DynamoDB.
3. RDS Protection Policy: Blocks destructive RDS operations (e.g., DeleteDBInstance, DeleteDBCluster) to safeguard databases and backups.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
80,Data\groud_truth\template\bedrock-agent-role.yaml,"We need a CloudFormation template that creates an IAM role that assumable only by the Bedrock service within the same AWS account, scoped to Bedrock agent resources (agent/*) and grant permissions to invoke any Bedrock foundation model and trigger Lambda functions for custom logic integration.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: AwsAccountId
  Error: {'Ref': 'AWS::AccountId'} is not of type 'string'
- Resource: AwsAccountId
  Error: Default should be allowed by AllowedPattern",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
81,Data\groud_truth\template\patch-resource-group.yaml,"We need a CloudFormation template that creates an AWS Resource Group using tag-based filters to include instances from services like EC2, RDS, SageMaker, SSM, and others.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
82,Data\groud_truth\template\alb-notebook-access-logsbucket.yaml,"We need a CloudFormation template that creates an encrypted S3 bucket (ALBAccessLogsBucket) with private access, enforced bucket ownership, and a 90-day retention policy to automatically delete old logs and a bucket policy allowing AWS ELB accounts and delivery.logs.amazonaws.com to write logs, ensuring compliance with AWS requirements for ALB logging while restricting public access.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ELBAccountIds
  Error: Mapping 'ELBAccountIds' is defined but not used
- Resource: ALBAccessLogsBucketPolicy
  Error: 'Fn::Sub' isn't needed because there are no variables
- Resource: ALBAccessLogsBucketPolicy
  Error: {'Fn::Sub': 'arn:aws:iam::${!FindInMap [""ELBAccountIds"", !Ref ""AWS::Region"", ""AccountId""]}:root'} is not valid under any of the given schemas when 'Fn::Sub' is resolved
- Resource: ALBAccessLogsBucketPolicy
  Error: '*' was expected when 'Fn::Sub' is resolved
- Resource: ALBAccessLogsBucketPolicy
  Error: {'Fn::Sub': 'arn:aws:iam::${!FindInMap [""ELBAccountIds"", !Ref ""AWS::Region"", ""AccountId""]}:root'} does not match '^\\d{12}$' when 'Fn::Sub' is resolved
- Resource: ALBAccessLogsBucketPolicy
  Error: {'Fn::Sub': 'arn:aws:iam::${!FindInMap [""ELBAccountIds"", !Ref ""AWS::Region"", ""AccountId""]}:root'} does not match '^arn:(aws|aws-cn|aws-us-gov):iam::\\d{12}:(?:root|user|group|role)' when 'Fn::Sub' is resolved
- Resource: ALBAccessLogsBucketPolicy
  Error: {'Fn::Sub': 'arn:aws:iam::${!FindInMap [""ELBAccountIds"", !Ref ""AWS::Region"", ""AccountId""]}:root'} does not match '^arn:(aws|aws-cn|aws-us-gov):sts::\\d{12}:assumed-role' when 'Fn::Sub' is resolved
- Resource: ALBAccessLogsBucketPolicy
  Error: {'Fn::Sub': 'arn:aws:iam::${!FindInMap [""ELBAccountIds"", !Ref ""AWS::Region"", ""AccountId""]}:root'} does not match '^arn:(aws|aws-cn|aws-us-gov):iam::cloudfront:user/.+$' when 'Fn::Sub' is resolved
- Resource: ALBAccessLogsBucketPolicy
  Error: 'Fn::Sub' isn't needed because there are no variables
- Resource: ALBAccessLogsBucketPolicy
  Error: 'Fn::Sub' isn't needed because there are no variables",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
83,Data\groud_truth\template\tgw.yaml,"We need a CloudFormation template that creates an AWS Transit Gateway (TGW) and a Resource Access Manager (RAM) resource share to centralize and simplify network connectivity across multiple VPCs and AWS accounts. The template should:

Deploy a Transit Gateway with predefined BGP settings (ASN 65000), automatic attachment acceptance, and default route propagation/association for seamless cross-VPC routing.

Share the Transit Gateway to AWS account with if of (644519422710) to enable cross-account network connectivity without manual resource duplication.

Export the Transit Gateway ID and Resource Share ID with stack-specific names for integration with VPC attachments or other networking components.","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
84,Data\groud_truth\template\macie.yaml,We need a CloudFormation template that creates an AWS Macie session to enable automated sensitive data discovery and security monitoring across AWS accounts.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
85,Data\groud_truth\template\CloudWatch2S3-bucket.yaml,We need a CloudFormation template that creates a secure and cost-optimized S3 bucket for storing CloudWatch export data with configurable versioning and automated lifecycle management. ,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: LoggingBucket
  Error: A bucket with 'AccessControl' set should also have at least one 'OwnershipControl' configured
- Resource: LoggingBucket
  Error: 'AccessControl' is a legacy property. Consider using 'AWS::S3::BucketPolicy' instead",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
86,Data\groud_truth\template\guardduty.yaml,We need a CloudFormation template that creates an AWS GuardDuty detector to enable continuous security monitoring for malicious activity in EC2 instances. ,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
87,Data\groud_truth\template\essentials.yaml,"We need a CloudFormation template that creates an S3 bucket for Lambda artifacts and a KMS key for encryption. The template should:

Provision a publicly accessible S3 bucket and enabling easy distribution of Lambda deployment packages or static assets. 

Define a customer-managed KMS key with automatic rotation and granular IAM policies to allow administration/usage by the root account and an imported service role.

Create a KMS key alias for simplified key referencing.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: LambdaArtifactsBucket
  Error: A bucket with 'AccessControl' set should also have at least one 'OwnershipControl' configured
- Resource: LambdaArtifactsBucket
  Error: 'AccessControl' is a legacy property. Consider using 'AWS::S3::BucketPolicy' instead",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
88,Data\groud_truth\template\sc-s3-launchrole.yaml,"We need a CloudFormation template that creates an IAM role for AWS Service Catalog to enable secure provisioning and management of S3 and Lambda resources. The template should:

Define a role assumable by Service Catalog, with pre-attached managed policies for full S3 access and basic Lambda execution.

Grant granular permissions for Service Catalog operations (e.g., provisioning products), IAM role/policy management, Lambda function lifecycle actions, CloudFormation stack operations, and SNS integration to support end-to-end resource deployment workflows.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
89,Data\groud_truth\template\security-hub.yaml,We need a CloudFormation template that creates an AWS Security Hub resource that enables default standards and turns on consolidated control findings.,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: SecurityHub
  Error: Additional properties are not allowed ('ControlFindingsGenerator' was unexpected. Did you mean 'ControlFindingGenerator'?)
- Resource: SecurityHubArn
  Error: 'Arn' is not one of ['ARN', 'SubscribedAt'] in ['us-east-1']",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
90,Data\groud_truth\template\ec2-image-builder.yaml,"We need a CloudFormation template that creates AWS resources for EC2 Image Builder to automate the creation, management, and logging of secure AMIs (Amazon Machine Images). The template should:

Define an IAM role and instance profile with permissions for Systems Manager (SSM) and Image Builder operations, enabling EC2 instances to be managed and tagged during image creation.

Provision an S3 bucket with public access controls disabled for storing image build logs, tagged with an owner email (u12345678@anu.edu.au) for accountability.

Attach a managed IAM policy granting read/write access to the logs bucket and basic S3 listing permissions, ensuring Image Builder can store and retrieve log data securely.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
91,Data\groud_truth\template\bucket_for_vpc.yaml,"We need a CloudFormation template that creates a S3 bucket for storing VPC flow logs with automated lifecycle management and strict access controls. The template should:

Provision an S3 bucket with AES256 encryption, optional custom naming, and versioning (enabled/suspended via parameter) to securely store network traffic logs.

Define parameter-driven lifecycle rules to transition logs to cost-effective storage classes (e.g., Glacier) after a specified number of days (default: 30) and delete them after a configurable retention period (default: 365,000 days), balancing compliance and cost optimization.

Attach a bucket policy allowing only the delivery.logs.amazonaws.com service to write logs with bucket-owner-full-control ACLs, ensuring secure log ingestion for VPC flow monitoring.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
92,Data\groud_truth\template\BashScriptAssociation.yaml,"We need a CloudFormation template that creates a self-configuring EC2 instance with automated Nginx installation and centralized logging using AWS Systems Manager (SSM). The template should:

Provision an EC2 instance (Linux 2) with the latest Amazon Linux AMI, an IAM role for SSM access, and permissions to read/write logs to a dedicated S3 bucket.

Automate Nginx installation via an SSM Association that executes a shell script (AWS-RunShellScript) during instance launch, ensuring the web server starts immediately.

Configure SSM logging to store command outputs in an S3 bucket with structured paths (logs/) for auditability.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
93,Data\groud_truth\template\BashScriptAssociationTags.yaml,"We need a CloudFormation template that creates an auto-configuring EC2 instance with tag-driven Nginx installation and enhanced monitoring using AWS Systems Manager (SSM). The template should:

Provision an EC2 instance (Linux 2) with the latest Amazon Linux AMI, an IAM role for SSM access, and permissions to read/write logs to a dedicated S3 bucket.

Automate Nginx installation via an SSM Association that triggers on the instance tag, executing a shell script to install and start the web server, ensuring consistent configuration across tagged instances.

Configure centralized logging to an S3 bucket and integrate CloudWatch monitoring for performance insights, enabling observability of the instance and application.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: LogBucket
  Error: 'AccessControl' is a legacy property. Consider using 'AWS::S3::BucketPolicy' instead",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
94,Data\groud_truth\template\BashScriptSSMAutomation.yaml,"We need a CloudFormation template that creates an EC2 instance with automated OS updates, Nginx installation, and validation workflows using AWS Systems Manager (SSM) Automation. The template should:

Deploy an EC2 instance (Linux 2) with the latest Amazon Linux AMI and an IAM role granting SSM permissions for command execution, S3 log storage access, and CloudWatch monitoring.

Define a custom SSM Automation document to orchestrate a multi-step process: OS updates with reboot checks, Nginx installation, and curl-based validation of the web server, ensuring end-to-end configuration integrity.

Configure centralized logging to an S3 bucket for auditability and leverage IAM roles to enforce least-privilege access for SSM operations (e.g., associations, command execution).","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: EC2Instance
  Error: 'Fn::Sub' isn't needed because there are no variables",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
95,Data\groud_truth\template\BashScriptSSMAutomationTags.yaml,"We need a CloudFormation template that creates an EC2 instance with tag-driven automation for OS updates, Nginx installation, and validation using AWS Systems Manager (SSM). The template should:

Deploy an EC2 instance (Linux 2) with the latest Amazon Linux AMI, an IAM role for SSM access, and a tag to trigger automated workflows.

Define a custom SSM Automation document to execute a multi-step process: OS updates with reboot checks, Nginx installation, and curl-based validation of the web server, ensuring end-to-end configuration integrity.

Target instances based on the nginx: Yes tag, enabling dynamic automation for tagged resources without hardcoding instance IDs.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
96,Data\groud_truth\template\network-stack.yaml,"We need a CloudFormation template that creates a production-ready VPC network infrastructure with one public and two private subnets, security groups, an internal Application Load Balancer (ALB), and an ECR repository for a containerized application. The template should:

Define a VPC with public subnets (internet-facing via an Internet Gateway) and private subnets (outbound access via a NAT Gateway) across three Availability Zones for high availability.

Configure security groups allowing HTTP/HTTPS, SSH, PostgreSQL, and internal VPC traffic, with broad ingress rules for simplicity during initial setup.

Deploy an internal ALB across private subnets with a default listener (port 80) returning error responses, ready for backend service integration.

Provision a private ECR repository with automated image scanning and store critical resource IDs (VPC, subnets, security groups, ALB listener) in SSM Parameter Store for cross-service referencing.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ECRRepository
  Error: {'Fn::Sub': '${EnvironmentName}-app-repository'} does not match '^(?=.{2,256}$)((?:[a-z0-9]+(?:[._-][a-z0-9]+)*/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)$' when 'Fn::Sub' is resolved",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
97,Data\groud_truth\template\organization_data_pipeline.yaml,"We need a CloudFormation template that creates a serverless pipeline to collect, store, and analyze AWS Organization data for centralized governance and reporting. The template should:

Provision an S3 bucket with encryption and strict access controls to store organizational data (accounts, OUs, tags) retrieved from the management account.

Deploy a Lambda function that assumes a cross-account IAM role to fetch AWS Organizations metadata (accounts, hierarchies, tags) on a weekly schedule via CloudWatch Events, writing results to S3 in JSON format.

Configure a Glue crawler to automatically catalog the S3 data into an Athena database (managementcur), enabling SQL-based querying for compliance or auditing.

Use parameterized inputs to customize the target S3 bucket, tags to include in reports, management account ID, and Athena database name.

Ensure secure permissions via IAM roles for Lambda (cross-account STS assume, Organizations read access) and Glue (S3 write access), while exporting resource ARNs for integration with analytics tools.

This template automates organization-wide visibility, centralizes data for audit readiness, and reduces manual data aggregation efforts through serverless orchestration.","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
98,Data\groud_truth\template\web.yaml,We need a CloudFormation template that creates an AWS Amplify web application with a production branch to host and deploy a TodoApp.,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
99,Data\groud_truth\template\pattern3-base.yaml,"We need a CloudFormation template that creates a secure, multi-AZ VPC architecture with public/private subnets and NAT Gateway connectivity following AWS Well-Architected security best practices. The template should:

Deploy a VPC with public subnets and private subnets across two Availability Zones (us-east-1a and us-east-1b), ensuring high availability.

Configure dedicated route tables for public/private subnets, enforcing controlled traffic flow (public subnets use IGW directly, private subnets route through NAT Gateway).

Tag all resources with identifiers for cost tracking and governance alignment.","Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: PublicSubnet1
  Error: Avoid hardcoding availability zones 'us-east-1a'
- Resource: PublicSubnet2
  Error: Avoid hardcoding availability zones 'us-east-1b'
- Resource: PrivateSubnet1
  Error: Avoid hardcoding availability zones 'us-east-1a'
- Resource: PrivateSubnet2
  Error: Avoid hardcoding availability zones 'us-east-1b'",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,
100,Data\groud_truth\template\baseline-iam.yaml,"We need a CloudFormation template that creates a standardized IAM baseline with secure, role-based access controls and cross-account trust configurations for AWS account governance. The template should:

Define IAM groups and roles (e.g., PrivilegedAdmin, RestrictedAdmin, IdentityAdmin) with granular permissions, enforcing MFA requirements for elevated actions and role assumption to enhance security.

Establish cross-account trust relationships for centralized management, allowing trusted accounts (e.g., Identity Management Account, Tooling Management Account) to assume roles while restricting sensitive operations (e.g., billing, CloudHSM) via explicit deny policies.

Provision CloudFormation and StackSet execution roles with controlled permissions for infrastructure-as-code workflows, including template validation and stack management.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
101,Data\groud_truth\template\vpc-flow-logs-custom.yaml,"We need a CloudFormation template that creates a VPC with flow logging configured to monitor network traffic patterns. The template should automatically provision an S3 bucket for storing flow logs. The logs must capture specified traffic types and include comprehensive metadata fields. Security requirements include blocking public access to the S3 bucket, enforcing SSL for data transfers, and granting minimal permissions for AWS log delivery services. The solution should support optional log file prefixes for organizational structuring and output the final bucket name for integration with downstream systems. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: LogFilePrefix
  Error: Parameter LogFilePrefix not used.",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
102,Data\groud_truth\template\risk_management.yaml,"We need a CloudFormation template that creates a risk management system for AWS workloads, which integrates logging, data storage, and notifications to track and respond to operational risks. The template should provision two AWS Lambda functions that interact with a DynamoDB table to store workload and risk-related data using composite keys (workload_id and question_id). It must define an IAM role granting the Lambda functions permissions to perform DynamoDB operations. Additionally, an SNS Topic is required to enable notifications, with a policy allowing SSM OpsCenter to publish alerts to this topic.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
103,Data\groud_truth\template\security-lab-stack.yaml,"We need a CloudFormation template that creates a secure, monitored web application environment in AWS, which includes a PHP/Apache web server, centralized logging, and compliant network infrastructure. The template should provision a VPC with a public subnet, internet gateway, and security group allowing HTTP access to host an EC2 instance running the latest Amazon Linux AMI. The instance must automatically install Apache and PHP, generate a dynamic webpage and enforce IAM roles for CloudWatch monitoring and Systems Manager (SSM) access. An S3 bucket with server-side encryption and restricted public access is required to store CloudWatch logs, configured via bucket policies to allow log ingestion. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
104,Data\groud_truth\template\sample_environment_template.yaml,"We need a CloudFormation template that creates a lab environment for testing EC2 instance scheduling automation, which includes a VPC, managed instances, and an admin instance preconfigured with scheduling tools. The template should provision a VPC with a public subnet, internet gateway, and route tables to enable internet access for EC2 instances. It must deploy five lightweight (t3.nano) EC2 instances tagged for a development environment (`environment: dev`) and a dedicated admin instance that installs the AWS Instance Scheduler CLI via a user data script. The admin instance requires an IAM role with permissions to invoke Lambda functions and interact with CloudFormation, while all instances use SSM for management. Security configurations include a permissive security group (allowing unrestricted outbound traffic) and network isolation through VPC routing. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
105,Data\groud_truth\template\automation_role.yaml,"We need a CloudFormation template that creates an IAM role for cross-service automation workflows, which centralizes permissions for Systems Manager (SSM), EC2, and monitoring tools. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
106,Data\groud_truth\template\bucket_and_notification.yaml,"We need a CloudFormation template that creates an S3 bucket with event-driven notifications to an SNS topic, which automates alerts or workflows when new objects are uploaded. The template should provision an S3 bucket and an SNS topic, then configure the bucket to send notifications to the topic for all s3:ObjectCreated:* events. The SNS topic must include a policy allowing the S3 service to publish messages, restricted to the specific bucket and AWS account to prevent unauthorized access. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: S3BucketNotificationWithPrefix
  Error: Resource type 'AWS::S3::BucketNotification' does not exist in 'us-east-1'
- Resource: S3BucketNotificationNoPrefix
  Error: Resource type 'AWS::S3::BucketNotification' does not exist in 'us-east-1'
- Resource: S3BucketNotificationNoPrefix
  Error: {'Fn::Not': ['HasPrefix']} is not of type 'string'",detailed,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: NoPrefix
  Error: Condition NoPrefix not used",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,
107,Data\groud_truth\template\APIGateway_SQS_ReceiveMessages.yaml,"We need a CloudFormation template that creates a REST API Gateway integrated with an SQS queue to enable HTTP-based retrieval of messages, which simplifies polling for messages via a web endpoint. The template should provision an API Gateway with a GET method that maps to the SQS ReceiveMessage action, using AWS service integration to forward query parameters to SQS. It must configure an SQS queue with a policy allowing API Gateway to invoke ReceiveMessage, along with an IAM role granting the API Gateway permission to interact with the queue. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
108,Data\groud_truth\template\cognito_sample.yaml,"We need a CloudFormation template that creates a secure AWS Cognito user management system for applications while enforcing admin-managed user provisioning. The template should provision a Cognito User Pool with email verification, a customizable password policy and a preconfigured domain for hosted login pages. It must support OAuth flows and authentication methods like password-based and refresh token auth.","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
109,Data\groud_truth\template\mongoDB.yaml,"We need a CloudFormation template that creates an event-driven integration between AWS EventBridge and a MongoDB API endpoint, which routes application events to MongoDB for processing or logging. The template should provision an EventBridge event bus to capture custom events and configure an API destination using a MongoDB URL secured via API key authentication. It must define a connection with API key parameters (name and value) and an IAM role allowing EventBridge to invoke the MongoDB API endpoint. A dead-letter SQS queue is required to handle failed event deliveries, ensuring fault tolerance. For the MongoDBURL, you may use 'www.testanu.com'. For the ApiKeyName and ApiKeyValue you may use 'test_name' and 'test_value'.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: EventBridgeConnection
  Error: 'BasicAuthParameters' is a required property
- Resource: EventBridgeConnection
  Error: 'OAuthParameters' is a required property
- Resource: EventBridgeConnection
  Error: 'ApiKeyAuthParameters' is a required property
- Resource: EventBridgeConnection
  Error: {'ApiKey': {'Key': {'Ref': 'ApiKeyName'}, 'Value': {'Ref': 'ApiKeyValue'}}} is not valid under any of the given schemas
- Resource: EventBridgeConnection
  Error: Additional properties are not allowed ('ApiKey' was unexpected)",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: EventBridgeConnection
  Error: 'Resources/EventBridgeConnection/Properties/AuthParameters' has more than 2 properties
- Resource: EventBridgeConnection
  Error: {'ApiKeyAuthParameters': {'ApiKeyName': {'Ref': 'ApiKeyName'}, 'ApiKeyValue': {'Ref': 'ApiKeyValue'}}, 'BasicAuthParameters': {'Username': '', 'Password': ''}, 'OAuthParameters': {'AuthorizationEndpoint': '', 'HttpMethod': 'GET', 'ClientParameters': {'ClientID': '', 'ClientSecret': ''}, 'OAuthHttpParameters': {'BodyParameters': [], 'HeaderParameters': [], 'QueryStringParameters': []}}} is valid under each of {'required': ['OAuthParameters']}, {'required': ['ApiKeyAuthParameters']}, {'required': ['BasicAuthParameters']}
- Resource: EventBridgeConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'
- Resource: EventBridgeConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'
- Resource: EventBridgeConnection
  Error: Password shouldn't be hardcoded for Resources/EventBridgeConnection/Properties/AuthParameters/BasicAuthParameters/Password
- Resource: EventBridgeConnection
  Error: '' does not match ""^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$""
- Resource: EventBridgeConnection
  Error: '' is shorter than 1
- Resource: EventBridgeConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'
- Resource: EventBridgeConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
110,Data\groud_truth\template\crossAccResources.yaml,"We need a CloudFormation template that creates a cross-account private API Gateway integrated with a Lambda function, which enforces secure access via a VPC endpoint and custom domain. The template should provision a private API Gateway (configured to allow access only from a specified VPC endpoint ID) with a Lambda backend that returns a simple response. It must include IAM roles for Lambda execution (with basic CloudWatch logging permissions) and API Gateway-to-Lambda invocation policies. The API Gateway is deployed with a custom domain name and a stage, ensuring controlled access through VPC endpoint restrictions. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
111,Data\groud_truth\template\DataDogApiDestination.yaml,"We need a CloudFormation template that creates an EventBridge integration with DataDog for centralized log forwarding, which automates the delivery of application logs to DataDog's API. The template should provision an EventBridge event bus to capture events from a specified source (MyDataDogApp) and configure an API destination targeting DataDog's log ingestion endpoint (https://http-intake.logs.datadoghq.com). It must define a secure connection using a DataDog API key (testanu) for authentication and an IAM role granting EventBridge permissions to invoke the API destination. A dead-letter SQS queue is included to handle failed log deliveries, ensuring fault tolerance. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: DataDogConnection
  Error: 'BasicAuthParameters' is a required property
- Resource: DataDogConnection
  Error: 'OAuthParameters' is a required property
- Resource: DataDogConnection
  Error: 'ApiKeyAuthParameters' is a required property
- Resource: DataDogConnection
  Error: {'ApiKey': {'Key': 'DD-API-KEY', 'Value': {'Ref': 'DataDogApiKey'}}} is not valid under any of the given schemas
- Resource: DataDogConnection
  Error: Additional properties are not allowed ('ApiKey' was unexpected)",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: DataDogConnection
  Error: 'Resources/DataDogConnection/Properties/AuthParameters' has more than 2 properties
- Resource: DataDogConnection
  Error: {'ApiKeyAuthParameters': {'ApiKeyName': 'DD-API-KEY', 'ApiKeyValue': {'Ref': 'DataDogApiKey'}}, 'BasicAuthParameters': {'Username': 'not-used', 'Password': 'not-used'}, 'OAuthParameters': {'AuthorizationEndpoint': 'https://not-used.com', 'HttpMethod': 'GET', 'ClientParameters': {'ClientID': 'not-used', 'ClientSecret': 'not-used'}, 'OAuthHttpParameters': {'BodyParameters': [], 'HeaderParameters': [], 'QueryStringParameters': []}}} is valid under each of {'required': ['OAuthParameters']}, {'required': ['ApiKeyAuthParameters']}, {'required': ['BasicAuthParameters']}
- Resource: DataDogConnection
  Error: Password shouldn't be hardcoded for Resources/DataDogConnection/Properties/AuthParameters/BasicAuthParameters/Password",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
112,Data\groud_truth\template\sns-sqs.yaml,"We need a CloudFormation template that creates an S3 bucket with an SQS queue for event-driven object upload notifications. The template should provision an S3 bucket and an SQS queue, then configure the bucket to send notifications to the queue for all s3:ObjectCreated:* events. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: S3Bucket
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion
- Resource: S3BucketNotification
  Error: Resource type 'AWS::S3::BucketNotification' does not exist in 'us-east-1'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
113,Data\groud_truth\template\sns_with_events.yaml,"We need a CloudFormation template that creates an EventBridge rule with an SNS topic. The template should provision an SNS topic and an EventBridge rule that matches events from a predefined source (demo.cli). It must configure the EventBridge rule to forward matched events to the SNS topic, along with a topic policy granting EventBridge permissions to publish messages. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
114,Data\groud_truth\template\b2bi.yaml,"We need a CloudFormation template that creates an AWS B2B Data Interchange (B2BI) pipeline for transforming EDI X12_214 documents into JSON, which automates electronic data interchange workflows for business partners. The template should provision a B2BI profile with business contact details (name, email, phone) and a transformer resource defining the mapping logic to convert EDI transactions into structured JSON. It must configure an input S3 bucket to receive raw EDI files and an output S3 bucket to store transformed JSON data. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: B2BIProfile
  Error: 'Logging' is a required property
- Resource: B2BIProfile
  Error: Additional properties are not allowed ('LoggingConfiguration' was unexpected)
- Resource: B2BIProfile
  Error: Additional properties are not allowed ('RoleArn' was unexpected)
- Resource: B2BITransformer
  Error: 'Status' is a required property
- Resource: B2BITransformer
  Error: 'X12' is not one of ['XML', 'JSON', 'NOT_USED']
- Resource: B2BICapability
  Error: 'TRANSFORM' is not one of ['edi']
- Resource: B2BICapability
  Error: Additional properties are not allowed ('ProfileId' was unexpected)
- Resource: B2BICapability
  Error: 'Edi' is a required property
- Resource: B2BICapability
  Error: {'TransformerId': {'Ref': 'B2BITransformer'}, 'InputLocation': {'S3Location': {'BucketName': {'Ref': 'InputS3Bucket'}, 'Key': 'input/'}}, 'OutputLocation': {'S3Location': {'BucketName': {'Ref': 'OutputS3Bucket'}, 'Key': 'output/'}}} is not valid under any of the given schemas
- Resource: B2BICapability
  Error: Additional properties are not allowed ('TransformerId' was unexpected)
- Resource: B2BICapability
  Error: Additional properties are not allowed ('InputLocation' was unexpected)
- Resource: B2BICapability
  Error: Additional properties are not allowed ('OutputLocation' was unexpected)
- Resource: B2BIPartnership
  Error: 'Capabilities' is a required property
- Resource: B2BIPartnership
  Error: [{'CapabilityId': {'Ref': 'B2BICapability'}, 'Instruction': 'Process X12 214 shipment status messages and convert to JSON'}] is not of type 'object'",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: B2BIProfile
  Error: True is not one of ['ENABLED', 'DISABLED']
- Resource: B2BITransformer
  Error: 'ACTIVE' is not one of ['active', 'inactive']
- Resource: B2BICapability
  Error: Additional properties are not allowed ('Edi' was unexpected)
- Resource: B2BICapability
  Error: 'Edi' is a required property
- Resource: B2BICapability
  Error: {'InputLocation': {'S3Location': {'BucketName': {'Ref': 'InputS3Bucket'}, 'Key': 'input/'}}, 'OutputLocation': {'S3Location': {'BucketName': {'Ref': 'OutputS3Bucket'}, 'Key': 'output/'}}} is not valid under any of the given schemas
- Resource: B2BICapability
  Error: Additional properties are not allowed ('InputLocation' was unexpected)
- Resource: B2BICapability
  Error: Additional properties are not allowed ('OutputLocation' was unexpected)
- Resource: B2BIPartnership
  Error: 'ProfileId' is a required property
- Resource: B2BIPartnership
  Error: {'CapabilityId': {'Ref': 'B2BICapability'}, 'Instruction': 'Process X12 214 shipment status messages and convert to JSON'} is not of type 'array'",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: B2BICapability
  Error: 'Configuration' is a required property
- Resource: B2BICapability
  Error: Additional properties are not allowed ('Edi' was unexpected)
- Resource: B2BIPartnership
  Error: {'CapabilityId': {'Ref': 'B2BICapability'}, 'Instruction': 'Process X12 214 shipment status messages and convert to JSON'} is not of type 'string'",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: B2BICapability
  Error: 'Edi' is a required property
- Resource: B2BICapability
  Error: {'TransformerID': {'Ref': 'B2BITransformer'}, 'InputLocation': {'S3Location': {'BucketName': {'Ref': 'InputS3Bucket'}, 'Key': 'input/'}}, 'OutputLocation': {'S3Location': {'BucketName': {'Ref': 'OutputS3Bucket'}, 'Key': 'output/'}}} is not valid under any of the given schemas
- Resource: B2BICapability
  Error: Additional properties are not allowed ('TransformerID' was unexpected)
- Resource: B2BICapability
  Error: Additional properties are not allowed ('InputLocation' was unexpected)
- Resource: B2BICapability
  Error: Additional properties are not allowed ('OutputLocation' was unexpected)",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,
115,Data\groud_truth\template\sns-secretsmanager.yaml,"We need a CloudFormation template that creates an automated monitoring and alerting system for AWS Secrets Manager activities, which sends email notifications for critical secret lifecycle events. The template should provision an EventBridge rule to detect Secrets Manager API calls and route these events to an SNS topic. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
116,Data\groud_truth\template\sns_with_sqs.yaml,"We need a CloudFormation template that creates an SNS-to-SQS fanout system with filtered message routing, which enables scalable and selective message processing for different metric types (e.g., temperature, humidity). The template should provision a central SNS topic and three SQS queues: one for **all metrics**, and two filtered queues (`TemperatureSqsQueue`, `HumiditySqsQueue`) that receive only messages tagged with specific attributes (`MetricType: Temperature` or `Humidity`). Each queue includes a dead-letter queue to handle message processing failures. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
117,Data\groud_truth\template\DynamoDB_to_EventBridge.yaml,"We need a CloudFormation template that creates an event-driven integration between DynamoDB streams and EventBridge, which routes real-time database changes (inserts and updates) to a centralized event bus for downstream processing. The template should provision a DynamoDB table with streaming enabled to capture item modifications, an EventBridge event bus, and two EventBridge Pipes to filter and forward specific events (e.g., `INSERT` for new orders, `MODIFY` for updates) to the bus. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: InsertEventsPipe
  Error: 'DynamoDBTable' dependency already enforced by a 'GetAtt' at 'Resources/InsertEventsPipe/Properties/Source'
- Resource: InsertEventsPipe
  Error: 'DynamoDBTable' dependency already enforced by a 'GetAtt' at 'Resources/InsertEventsPipe/Properties/Enrichment'
- Resource: InsertEventsPipe
  Error: 'EventBridgeEventBus' dependency already enforced by a 'GetAtt' at 'Resources/InsertEventsPipe/Properties/Target'
- Resource: InsertEventsPipe
  Error: 'EventBridgePipesRole' dependency already enforced by a 'GetAtt' at 'Resources/InsertEventsPipe/Properties/RoleArn'
- Resource: InsertEventsPipe
  Error: 'InsertEventsDLQ' dependency already enforced by a 'GetAtt' at 'Resources/InsertEventsPipe/Properties/SourceParameters/DynamoDBStreamParameters/DeadLetterConfig/Arn'
- Resource: ModifyEventsPipe
  Error: 'DynamoDBTable' dependency already enforced by a 'GetAtt' at 'Resources/ModifyEventsPipe/Properties/Source'
- Resource: ModifyEventsPipe
  Error: 'DynamoDBTable' dependency already enforced by a 'GetAtt' at 'Resources/ModifyEventsPipe/Properties/Enrichment'
- Resource: ModifyEventsPipe
  Error: 'EventBridgeEventBus' dependency already enforced by a 'GetAtt' at 'Resources/ModifyEventsPipe/Properties/Target'
- Resource: ModifyEventsPipe
  Error: 'EventBridgePipesRole' dependency already enforced by a 'GetAtt' at 'Resources/ModifyEventsPipe/Properties/RoleArn'
- Resource: ModifyEventsPipe
  Error: 'ModifyEventsDLQ' dependency already enforced by a 'GetAtt' at 'Resources/ModifyEventsPipe/Properties/SourceParameters/DynamoDBStreamParameters/DeadLetterConfig/Arn'",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: InsertEventsPipe
  Error: Additional properties are not allowed ('FilterCriteria' was unexpected)
- Resource: ModifyEventsPipe
  Error: Additional properties are not allowed ('FilterCriteria' was unexpected)",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,
118,Data\groud_truth\template\EventBridge_Pipes_with_API_destinations.yaml,"We need a CloudFormation template that creates an EventBridge Pipes workflow to enrich SQS messages with external API data and log results, which automates data augmentation and monitoring for event-driven systems. The template should provision an SQS queue as the event source, an API destination (https://api.zippopotam.us/us/*), and a CloudWatch Log Group as the target. It must define an IAM role granting EventBridge Pipes permissions to read messages from SQS, invoke the API destination, and write enriched logs to CloudWatch. The EventBridge Pipe enriches messages by dynamically appending API data (e.g., fetching location details using a zip code from the message body) before forwarding results to logs. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ApiDestination
  Error: {'Fn::Sub': '${ApiEndpointUrl}/us/{zipcode}'} does not match ""^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$"" when 'Fn::Sub' is resolved",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
119,Data\groud_truth\template\event-kinesis.yaml,"We need a CloudFormation template that creates an EventBridge-to-Kinesis integration for real-time event streaming, which routes application-generated events to a Kinesis data stream for scalable processing or analytics. The template should provision an EventBridge event bus to capture events from a defined source (`my-application`), a Kinesis stream to ingest and buffer these events, and an IAM role granting EventBridge permissions to publish records to Kinesis. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
120,Data\groud_truth\template\sqs-pipes-batch-service.yaml,"We need a CloudFormation template that creates an event-driven AWS Batch job processing pipeline integrated with SQS and EventBridge Pipes, which automates the execution of containerized tasks in response to specific messages (e.g., ""OrderCreated""). The template should provision an SQS queue as the event source, an AWS Batch environment with a job queue and job definition, and an EventBridge Pipe to filter messages and trigger Batch jobs. Security configurations include IAM roles for Batch, Pipes, and ECS execution, along with VPC private subnets and security groups to isolate compute resources. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: PipesRole
  Error: 'Arn' is not one of ['JobQueueArn'] in ['us-east-1']
- Resource: EventBridgePipe
  Error: 'Arn' is not one of ['JobQueueArn'] in ['us-east-1']
- Resource: EventBridgePipe
  Error: Additional properties are not allowed ('FilterCriteria' was unexpected)
- Resource: BatchJobQueueARN
  Error: 'Arn' is not one of ['JobQueueArn'] in ['us-east-1']",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: SQSPollerFunction
  Error: Runtime 'nodejs14.x' was deprecated on '2023-12-04'. Creation was disabled on '2024-07-09' and update on '2025-02-28'. Please consider updating to 'nodejs20.x'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
121,Data\groud_truth\template\eventbridge-schedule-to-ssm.yaml,"We need a CloudFormation template that creates a scheduled automation workflow using EventBridge Scheduler and AWS Systems Manager (SSM), which executes cross-platform scripts on tagged EC2 instances at regular intervals. The template should provision Linux and Windows EC2 instances (with SSM agent roles), an SSM document defining OS-specific commands (e.g., echoing ""Hello World!""), and an SSM State Manager Association to target instances tagged with `HelloWorld: true`. It must configure an EventBridge Schedule to trigger the SSM Association every 15 minutes, using an IAM role with permissions to invoke SSM actions. Security requirements include IAM roles for EC2 instances (with SSM/S3 access) and EventBridge, along with an S3 bucket to store execution logs. Outputs provide instance IDs, log bucket name, and schedule ARN for monitoring. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
122,Data\groud_truth\template\ShopifyAPIDestination.yaml,"We need a CloudFormation template that creates an EventBridge integration with Shopify's product creation API, which automates product updates in Shopify based on application events. The template should provision an EventBridge event bus to capture events from a specified source (`MyShopifyApp`), configure an API destination targeting Shopify's product creation endpoint, and authenticate requests using a Shopify admin API key (provided as a parameter). The name for the myshopify shop is testanu.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ShopifyConnection
  Error: 'BasicAuthParameters' is a required property
- Resource: ShopifyConnection
  Error: 'OAuthParameters' is a required property
- Resource: ShopifyConnection
  Error: 'ApiKeyAuthParameters' is a required property
- Resource: ShopifyConnection
  Error: {'ApiKey': {'Key': 'X-Shopify-Access-Token', 'Value': {'Ref': 'ShopifyAdminAPIKey'}}} is not valid under any of the given schemas
- Resource: ShopifyConnection
  Error: Additional properties are not allowed ('ApiKey' was unexpected)",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ShopifyConnection
  Error: 'Resources/ShopifyConnection/Properties/AuthParameters' has more than 2 properties
- Resource: ShopifyConnection
  Error: {'ApiKeyAuthParameters': {'ApiKeyName': 'X-Shopify-Access-Token', 'ApiKeyValue': {'Ref': 'ShopifyAdminAPIKey'}}, 'BasicAuthParameters': {'Username': '', 'Password': ''}, 'OAuthParameters': {'AuthorizationEndpoint': '', 'HttpMethod': 'GET', 'OAuthHttpParameters': {'BodyParameters': [], 'HeaderParameters': [], 'QueryStringParameters': []}, 'ClientParameters': {'ClientID': '', 'ClientSecret': ''}}} is valid under each of {'required': ['OAuthParameters']}, {'required': ['ApiKeyAuthParameters']}, {'required': ['BasicAuthParameters']}
- Resource: ShopifyConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'
- Resource: ShopifyConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'
- Resource: ShopifyConnection
  Error: Password shouldn't be hardcoded for Resources/ShopifyConnection/Properties/AuthParameters/BasicAuthParameters/Password
- Resource: ShopifyConnection
  Error: '' does not match ""^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$""
- Resource: ShopifyConnection
  Error: '' is shorter than 1
- Resource: ShopifyConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'
- Resource: ShopifyConnection
  Error: '' does not match '^[ \\t]*[^\\x00-\\x1F\\x7F]+([ \\t]+[^\\x00-\\x1F\\x7F]+)*[ \\t]*$'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
123,Data\groud_truth\template\stripe.yaml,"We need a CloudFormation template that creates an EventBridge integration with Stripe's product API, which automates product creation in Stripe based on application events. The template should provision an EventBridge event bus to capture events from a specified source (`PartnerApp` with `PartnerAppDetailType`), configure an API destination targeting Stripe's endpoint (https://api.stripe.com/v1/products), and authenticate requests using an API key (provided via parameters) in the `Authorization` header. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: StripeApiConnection
  Error: 'BasicAuthParameters' is a required property
- Resource: StripeApiConnection
  Error: 'OAuthParameters' is a required property
- Resource: StripeApiConnection
  Error: 'ApiKeyAuthParameters' is a required property
- Resource: StripeApiConnection
  Error: {'ApiKey': {'Key': 'Authorization', 'Value': {'Fn::Sub': 'Bearer ${StripeApiKey}'}}} is not valid under any of the given schemas
- Resource: StripeApiConnection
  Error: Additional properties are not allowed ('ApiKey' was unexpected)",detailed,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: StripeApiConnection
  Error: 'ApiKeyName' is a required property
- Resource: StripeApiConnection
  Error: 'ApiKeyValue' is a required property
- Resource: StripeApiConnection
  Error: Additional properties are not allowed ('Key' was unexpected)
- Resource: StripeApiConnection
  Error: Additional properties are not allowed ('Value' was unexpected)",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,
124,Data\groud_truth\template\api_with_dynamoDB.yaml,"We need a CloudFormation template that creates a secure REST API Gateway integrated with Amazon DynamoDB for managing music data, which enables CRUD operations (Create/Read) through HTTP endpoints. The template should provision a DynamoDB table (`Music`) with a global secondary index (`Artist-Index`) for querying by artist, and an API Gateway with two methods: a **POST** endpoint to add music entries (artist, album) and a **GET** endpoint to retrieve entries by artist. Security requirements include API key authentication, IAM roles for API Gateway to access DynamoDB, and a usage plan with rate limiting/throttling to control traffic.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
125,Data\groud_truth\template\apigateway_ses.yaml,"We need a CloudFormation template that creates a secure REST API Gateway integrated with Amazon Simple Email Service (SES), which enables sending templated emails via HTTP endpoints while enforcing validation and rate limits. The template should provision an API Gateway with a POST method that transforms JSON payloads (containing `to`, `from`, `subject`, `text/html` content, etc.) into SES-compatible form data. It must configure an IAM role granting API Gateway permissions to invoke SES's `SendEmail` action and include request validation to ensure payloads adhere to a defined JSON schema. Security requirements include API key authentication, a usage plan with throttling (500 requests/second) and monthly quotas (10,000 requests), and encrypted API key handling. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
126,Data\groud_truth\template\apigateway_kinesis.yaml,"We need a CloudFormation template that creates a REST API Gateway integrated with Amazon Kinesis Data Streams, which enables HTTP-based interaction for ingesting and retrieving streaming data without direct AWS SDK dependencies. The template should provision a Kinesis stream and an API Gateway with endpoints to PUT records (single or batch), GET records via shard iterators, and manage stream metadata. Security configurations include an IAM role granting API Gateway permissions to perform Kinesis actions (`PutRecord`, `GetRecords`, etc.). The API transforms incoming HTTP requests into Kinesis-compatible formats (e.g., base64 encoding data, handling partition keys) and routes them to the specified stream.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
127,Data\groud_truth\template\efs_easy.yaml,"We need a CloudFormation template that creates an Amazon EFS file system with basic configurations for a testing environment, which establishes a shared storage solution in us-east-1a. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: SubnetA
  Error: Avoid hardcoding availability zones 'us-east-1a'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
128,Data\groud_truth\template\securityhub-controls.yaml,"We need a CloudFormation template that creates an automated solution for managing AWS Security Hub controls, which selectively disables specific compliance checks (CIS Benchmarks and AWS Foundational Security Best Practices) to tailor security monitoring to organizational requirements. The template deploys a Lambda function that programmatically updates Security Hub controls via the AWS SDK, enabling or disabling them based on user-provided parameters (e.g., `DisableCIS140Controls`). Security configurations include IAM roles with optional permissions boundaries and CloudWatch Logs retention policies. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
129,Data\groud_truth\template\config.yaml,"We need a CloudFormation template that creates a secure and compliant AWS Config setup with customizable retention policies and delivery configurations, which automates resource configuration tracking and audit logging across an AWS account. The template provisions an S3 bucket (or integrates with an existing one) to store configuration snapshots, an SNS topic for notifications, and configures AWS Config to record all resource changes with global coverage. Security measures include enforcing SSL for S3 bucket access, blocking public access, and optional IAM permission boundaries. A Lambda function dynamically manages retention periods (via custom resource) to align with compliance requirements (default: 2557 days) and adjusts delivery frequency (e.g., hourly/daily snapshots). ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
130,Data\groud_truth\template\account-password-policy.yaml,"We need a CloudFormation template that creates and manages an AWS account-wide IAM password policy with customizable security requirements, which enforces strong authentication practices for IAM users. The template configures parameters such as minimum password length (default: 14), mandatory character types (uppercase, lowercase, numbers, symbols), password expiration (e.g., 90 days), reuse prevention (e.g., 24 previous passwords), and self-service password changes. Security configurations include a Lambda function to dynamically apply/remove the policy via AWS SDK and optional IAM permission boundaries. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
131,Data\groud_truth\template\alert.yaml,"We need a CloudFormation template that creates a centralized alerting system using Amazon SNS, which aggregates notifications from multiple AWS services (e.g., CloudWatch Alarms, RDS, S3, Budgets) and routes them to configurable endpoints like email, HTTP/HTTPS URLs, or a fallback email for delivery failures. The template provisions an SNS topic with a policy allowing authorized AWS services to publish alerts, along with subscriptions for user-defined endpoints (email, webhooks) and retry policies for HTTP(S) targets. A CloudWatch Alarm monitors failed notifications and triggers a fallback SNS topic to ensure redundancy. Note the email and httpsendpoints may not be provided, so consider add conditions.","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
132,Data\groud_truth\template\batch-demo.template.yaml,"We need a CloudFormation template that creates an AWS Batch environment for executing containerized batch jobs, which automates infrastructure setup for scalable data processing tasks (e.g., S3 file operations). The template provisions a VPC with a subnet, an S3 bucket for input/output data, and configures AWS Batch components: a compute environment (EC2-based, with `m5.large` instances), a job queue, and a job definition using a Docker image (default: `amazonlinux`). The job definition includes a sample script that installs the AWS CLI, copies an S3 object, and re-uploads it, demonstrating basic workflow automation. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
133,Data\groud_truth\template\arch7-lab1.template.yaml,"We need a CloudFormation template that creates a self-contained web server environment in AWS, which provisions a VPC, subnet, security group, and an EC2 instance preconfigured with Apache, PHP, and sample web content. The template deploys a `t2.micro` instance using the latest Amazon Linux AMI, configures HTTP access via a security group, and automates software installation/content deployment via a user data script. The instance retrieves a ZIP file from S3, unzips it into the web root, and hosts the content. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
134,Data\groud_truth\template\lambda-demo.yaml,"We need a CloudFormation template that creates a basic AWS Lambda function. The template provisions a Lambda function with inline Node.js code that logs event details and returns a value from the input, along with an IAM role granting permissions to write logs to CloudWatch. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
135,Data\groud_truth\template\cloudfront-demo-api.yaml,"We need a CloudFormation template that creates a CloudFront distribution which fronts a regional API Gateway REST API with a mock backend. The solution should define an API Gateway with a `/hello` GET endpoint returning a static ""hello world"" JSON response.  Configure CloudFront to route requests to the API Gateway's production stage, disabling caching to ensure real-time responses. Ensure the CloudFront distribution uses HTTPS for origin communication and enforces HTTPS redirection for end users.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
136,Data\groud_truth\template\permission-boundary-demo.yaml,"We need a CloudFormation template that creates an IAM role with configurable permission boundaries which enforces governance controls for developer-created IAM resources. The solution should create a role with broad IAM privileges but conditionally apply permission boundaries to limit unintended escalation of permissions. Allow developers to create/modify roles and policies only if they adhere to naming prefixes (e.g., `MyTeam*`), mandatory `Owner` tags, and include a permission boundary policy. Provide a toggle parameter to enable/disable strict boundary enforcement, switching between permissive and restricted IAM policies. Define a default permission boundary policy that restricts actions to S3 and read-only IAM operations, overriding any permissions of roles created by developers. Ensure all developer-managed IAM resources are tagged with a team-specific `Owner` tag for accountability and resource tracking. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
137,Data\groud_truth\template\appsync-demo.yaml,"We need a CloudFormation template that creates an AppSync GraphQL API with a Lambda backend which provides a serverless pet inventory query service. The solution should deploy a Lambda function returning mock pet data (ID, name, type) as a static dataset. Define an AppSync GraphQL API (`PetShopAPI`) with API_KEY authentication for anonymous access and a schema supporting a `getPets` query to fetch pet details. Configure IAM roles for Lambda execution and AppSync-to-Lambda invocation, ensuring least privilege. Link the AppSync resolver to the Lambda data source using request/response mapping templates to transform the Lambda output into the GraphQL schema format.  ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: PetInventoryFunction
  Error: Runtime 'nodejs14.x' was deprecated on '2023-12-04'. Creation was disabled on '2024-07-09' and update on '2025-02-28'. Please consider updating to 'nodejs20.x'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
138,Data\groud_truth\template\arch-lab1-demo.yaml,"We need a CloudFormation template that creates a web application environment with integrated S3, DynamoDB, and EC2 resources. The solution should deploy an EC2 instance in a VPC with public subnet access, configured with Apache/PHP and preloaded lab files to serve a web application. Create an S3 bucket to host static assets (images, jQuery libraries) and a DynamoDB table (`AWS-Services`) with composite keys for structured data storage.  Attach an IAM role to the EC2 instance granting full S3 and DynamoDB access, enabling automated asset uploads and database population via UserData scripts. Automate application setup during instance bootstrapping, including PHP/AWS SDK installation, dynamic region/bucket configuration, and DynamoDB data ingestion from JSON files. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: StaticAssetsBucketPolicy
  Error: 'StaticAssetsBucket' dependency already enforced by a 'Ref' at 'Resources/StaticAssetsBucketPolicy/Properties/Bucket'
- Resource: StaticAssetsBucketPolicy
  Error: 'StaticAssetsBucket' dependency already enforced by a 'Ref' at 'Resources/StaticAssetsBucketPolicy/Properties/PolicyDocument/Statement/0/Resource'
- Resource: WebServerInstance
  Error: 'StaticAssetsBucket' dependency already enforced by a 'Ref' at 'Resources/WebServerInstance/Properties/UserData/Fn::Base64'
- Resource: WebServerInstance
  Error: 'WebServerInstanceProfile' dependency already enforced by a 'Ref' at 'Resources/WebServerInstance/Properties/IamInstanceProfile'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
139,Data\groud_truth\template\custom-resource-example.yaml,"We need a CloudFormation template that creates a custom resource using AWS Lambda which demonstrates dynamic parameter processing and controlled success/failure scenarios during stack operations. The solution should deploy a Lambda function to perform arithmetic operations (addition, subtraction, multiplication, division) based on user-provided parameters (`FirstNumber`, `SecondNumber`, `Operator`). Implement a conditional failure mechanism via a parameter to simulate custom resource errors for testing purposes. Define a `Custom::helper` resource that invokes the Lambda during stack creation/updates and propagates calculation results to CloudFormation outputs. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ArithmeticHelper
  Error: 'ArithmeticLambdaFunction' dependency already enforced by a 'GetAtt' at 'Resources/ArithmeticHelper/Properties/ServiceToken'",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
140,Data\groud_truth\template\stepfunction-calculator.yaml,"We need a CloudFormation template that creates a serverless calculator workflow using AWS Step Functions and Lambda which processes arithmetic operations based on dynamic input. The solution should define a Step Functions state machine (`Calculator-StateMachine`) with a choice state to route requests to the appropriate arithmetic operation (add, subtract, multiply, divide) or fail for unsupported operators. It should deploy a Lambda function (`Calculator`) to execute calculations using input parameters (`operator` and `operands`), returning results to the workflow. Configure a CloudWatch Logs group for the Lambda function to retain logs for 3 days, simplifying debugging and cleanup.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
141,Data\groud_truth\template\stepfunction-recognition.yaml,"We need a CloudFormation template that creates an automated image recognition pipeline using Step Functions, S3, and Amazon Rekognition which triggers SMS alerts when human faces are detected in uploaded images. The solution should deploy an S3 bucket with EventBridge notifications enabled to detect image uploads and initiate a Step Functions workflow. Define a Step Functions state machine that validates image file extensions, invokes Amazon Rekognition to detect ""Human"" or ""Person"" labels, and sends SMS alerts via SNS if detected, using a phone number (+14071113333`).  Configure IAM roles for EventBridge (to trigger Step Functions) and the state machine (to access S3, Rekognition, and SNS), ensuring least-privilege permissions. Include a custom Lambda resource to empty the S3 bucket during stack deletion, avoiding retention conflicts.  ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
142,Data\groud_truth\template\systems-manager-demo.yaml,"We need a CloudFormation template that creates EC2 instances managed by AWS Systems Manager (SSM). The solution should deploy Auto Scaling Groups with launch templates for both Linux (Amazon Linux 2) and Windows instances, using SSM Parameter Store to fetch the latest AMIs dynamically. Configure a VPC with public subnets, internet gateway, and security groups to allow HTTP access and ensure instances are network-accessible for SSM operations. Attach IAM roles (`SSMRole`) with `AmazonEC2RoleforSSM` policy to instances, granting permissions for SSM agent communication and management tasks (e.g., Run Command, Patch Manager). Automate SSM agent installation on Linux instances via user data scripts, while leveraging pre-configured SSM integration for Windows AMIs. ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: LinuxLaunchTemplate
  Error: 'Fn::Sub' isn't needed because there are no variables
- Resource: WindowsLaunchTemplate
  Error: 'Fn::Sub' isn't needed because there are no variables",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
143,Data\groud_truth\template\arch7-lab6.yaml,"We need a CloudFormation template that creates a secure static website hosted on S3 with CloudFront CDN integration which automates content deployment and cleanup. The solution should deploy an S3 bucket configured with public read access for CloudFront via an Origin Access Identity (OAI), ensuring secure content delivery without exposing the bucket directly to the internet. Create a CloudFront distribution with HTTPS enforcement, caching disabled, and integration with the S3 bucket to serve static content globally.  Use a custom Lambda resource to automatically populate the S3 bucket with a default `index.html` file during stack creation and empty the bucket during stack deletion, avoiding retention conflicts.  ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: S3Bucket
  Error: 'AccessControl' is a legacy property. Consider using 'AWS::S3::BucketPolicy' instead",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
144,Data\groud_truth\template\arch7-lab2.yaml,"We need a CloudFormation template that creates a multi-tier AWS network environment with secure public/private subnets and SSM-managed EC2 instances. The solution should deploy a VPC with two public and private subnets, NAT Gateway, and route tables to enable internet access for private instances while isolating backend resources. Launch EC2 instances in both subnets: a public instance (`PublicInstance`) hosting a web server (Apache/PHP) and a private instance (`PrivateInstance`), both managed via AWS Systems Manager using IAM roles with `AmazonSSMManagedInstanceCore` policy. Configure security groups to restrict traffic: public instances allow HTTP access globally, while private instances only permit HTTPS from the public security group.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
145,Data\groud_truth\template\cloudfront-demo.yaml,"We need a CloudFormation template that creates a secure static website hosted on S3 with CloudFront CDN integration and automated content management which enforces HTTPS and optimizes caching. The solution should deploy an S3 bucket configured with Origin Access Control to securely grant CloudFront read access to objects, replacing legacy OAI methods. Create a CloudFront distribution with a custom cache policy (60-second default TTL, HTTPS enforcement) and integration with the S3 bucket for global content delivery. Automate bucket initialization via a Lambda custom resource that deploys a default `index.html` file during stack creation and empties the bucket during deletion to avoid retention conflicts.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
146,Data\groud_truth\template\adv-dev-lab3.yaml,"We need a CloudFormation template that creates an automated image analysis pipeline using S3, Lambda, Step Functions, and Rekognition which triggers SMS alerts when human faces are detected in uploaded images. The solution should deploy an S3 bucket configured to trigger a Lambda function on object upload, initiating a Step Functions workflow for image processing. Define a Step Functions state machine to orchestrate Rekognition-based human detection via lambda function and SMS notifications via  lambda function, conditioned on analysis results. Configure IAM roles and policies to resolve circular dependencies between S3 event notifications and Lambda permissions, ensuring secure cross-service communication (S3¡úLambda¡úStep Functions¡úRekognition/SNS). Integrate Amazon SNS to send alerts to a phone number when human labels are detected, using least-privilege access for Lambda execution roles.  ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: ImageBucket
  Error: Both 'UpdateReplacePolicy' and 'DeletionPolicy' are needed to protect resource from deletion
- Resource: AnalysisLambdaFunction
  Error: Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-02-28' and update on '2025-03-31'. Please consider updating to 'nodejs20.x'
- Resource: NotificationLambdaFunction
  Error: Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-02-28' and update on '2025-03-31'. Please consider updating to 'nodejs20.x'
- Resource: TriggerLambdaFunction
  Error: Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-02-28' and update on '2025-03-31'. Please consider updating to 'nodejs20.x'
- Resource: S3NotificationFunction
  Error: Runtime 'nodejs16.x' was deprecated on '2024-06-12'. Creation was disabled on '2025-02-28' and update on '2025-03-31'. Please consider updating to 'nodejs20.x'
- Resource: S3BucketNotificationCustomResource
  Error: 'TriggerLambdaFunction' dependency already enforced by a 'GetAtt' at 'Resources/S3BucketNotificationCustomResource/Properties/NotificationConfiguration/LambdaFunctionConfigurations/0/Function'",detailed,"Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,
147,Data\groud_truth\template\slot-machine-website.yaml,"We need a CloudFormation template that creates a serverless slot machine web application with automated content deployment and anonymous user access which integrates S3, Lambda, and deploy an S3 bucket configured as a static website hosting slot machine assets (HTML, CSS, images) with public read access. Implement a Lambda function to simulate slot spins, returning randomized results and determining wins based on predefined card combinations. Use Cognito Identity Pool to grant unauthenticated users temporary AWS credentials, allowing frontend JavaScript to securely invoke the Lambda via IAM roles and policies. Automate website setup via a custom Lambda resource that downloads a pre-built ZIP file, injects Cognito/region configurations into the frontend code, and uploads content to S3 during stack deployment. Configure IAM roles to enforce least privilege: one for Lambda execution (with logging permissions) and another for Cognito identities (allowing only `lambda:InvokeFunction`).  Cognito for seamless gameplay. The solution should",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
148,Data\groud_truth\template\multiaz.yaml,"We need a CloudFormation template that creates a Jenkins server deployment across multiple Availability Zones using AWS Auto Scaling. The template should deploy Jenkins on EC2 instances within a VPC, spread across two public subnets for redundancy. It must automate Jenkins installation and configuration via a launch template. The solution should use an Auto Scaling Group to ensure at least one instance is always running, while integrating IAM roles for Systems Manager (SSM) access. Networking components like internet gateways, route tables, and NACLs ensure public accessibility and traffic control. .",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
149,Data\groud_truth\template\efs.yaml,"We need a CloudFormation template that creates an Amazon EFS file system with automated monitoring and cross-AZ EC2 instance integration, designed for shared storage and centralized data access across multiple Availability Zones. The template should deploy an encrypted EFS file system with mount targets in two public subnets. It must provision two EC2 instances (in separate AZs) with IAM roles granting EFS access and Systems Manager (SSM) permissions for secure management. The instances should automatically mount the EFS file system to `/home` during bootstrapping, ensuring data persistence and synchronization. CloudWatch alarms monitor EFS performance metrics to preemptively detect capacity or performance issues. ","Based on the evaluation, the template contains Deployment Errors.",general,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
150,Data\groud_truth\template\redis-minimal.yaml,We need a CloudFormation template that creates a minimal Redis caching solution with secure EC2 instance access via AWS Systems Manager (SSM) which integrates ElastiCache and EC2 for a managed in-memory data store. The solution should deploy a Redis ElastiCache cluster in a VPC using two subnets. Launch an EC2 instance in a public subnet with SSM-enabled IAM roles. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
151,Data\groud_truth\template\bedrock-agent.yaml,"We need a CloudFormation template that creates an AWS Bedrock Agent integrated with a Lambda function which provides automated stock price lookup capabilities using a foundational AI model. The solution should deploy a Lambda function returning a hard-coded stock price (e.g., 100) as a placeholder for future business logic integration. Define a Bedrock Agent configured with a specified foundational model (e.g., Claude 3 Sonnet) and instructions to handle stock-related queries via a custom `getStockPrice` action.  Establish IAM roles for Lambda execution (with logging permissions) and Bedrock Agent operations (including `bedrock:InvokeModel` access), ensuring secure service-to-service communication. Link the Bedrock Agent to the Lambda function through an action group with parameterized schema support for stock symbol inputs.  ","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: StockPriceActionGroup
  Error: Resource type 'AWS::Bedrock::AgentActionGroup' does not exist in 'us-east-1'
- Resource: StockPriceActionGroup
  Error: 'BedrockAgent' dependency already enforced by a 'Ref' at 'Resources/StockPriceActionGroup/Properties/AgentId'",detailed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
152,Data\groud_truth\template\template-rds-proxy.yaml,"We need a CloudFormation template that creates a secure, scalable Amazon Aurora MySQL cluster with RDS Proxy integration, which optimizes database connection management and enhances availability for serverless or high-concurrency workloads. The template should provision a VPC with private subnets across multiple Availability Zones, an Aurora MySQL cluster (with primary and reader instances), and an RDS Proxy to pool and manage connections. Security configurations include encrypted storage, IAM database authentication, Secrets Manager for credential management, and security groups restricting access to authorized resources (e.g., Lambda functions via a dedicated security group). The RDS Proxy is configured with TLS enforcement, IAM roles for secure secret retrieval, and connection pooling settings to prevent overload. Additional features include CloudWatch logging, enhanced monitoring, and performance insights for observability.","Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template contains YAML Syntax Errors.",general,"Based on the evaluation, the template failed at the yaml_validation stage. Check below for the error details.
YAML Syntax Error: Line 431: too many spaces inside brackets
Line 432: too many spaces inside brackets",detailed,"Based on the evaluation, the template contains CloudFormation Template Syntax Errors.",general,"Based on the evaluation, the template failed at the syntax_validation stage. Check below for the error details.
CloudFormation Template Syntax Errors:
- Resource: DBCluster
  Error: 'DatabaseSecret' dependency already enforced by a 'Ref' at 'Resources/DBCluster/Properties/MasterUsername/Fn::Join/1/1'
- Resource: DBCluster
  Error: 'DatabaseSecret' dependency already enforced by a 'Ref' at 'Resources/DBCluster/Properties/MasterUserPassword/Fn::Join/1/1'",detailed,,,,,,,,,,,,,,,,,,,,,,,,
